########################################################################
#
# File:   qmtest.in
# Author: Alex Samuel
# Date:   2001-03-15
#
# Contents:
#   QMTest command line application.
#
# Copyright (c) 2001 by CodeSourcery, LLC.  All rights reserved. 
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
########################################################################

# Set up the Python module lookup path to find QMTrack.
execfile("@qm_setup_path_script@")

########################################################################
# imports
########################################################################

import cmdline
import qm
import qm.cmdline
import sys

########################################################################
# functions
########################################################################

def print_error_message(message):
    sys.stderr.write("%s: %s\n" % (program_name, message))


########################################################################
# script
########################################################################

# Load QMTest diagnostics.
diagnostic_file = qm.get_share_directory("diagnostics", "test.txt")
qm.diagnostic.diagnostic_set.ReadFromFile(diagnostic_file)

# Load RC options.
qm.rc.Load("test")
                                                       
program_name = sys.argv[0]

try:
    # Parse the command line.
    command = cmdline.Command(program_name, sys.argv[1:])
    # Execute the command.
    command.Execute(sys.stdout)
    exit_code = 0

except RuntimeError, msg:
    print_error_message(msg)
    exit_code = 1

except qm.cmdline.CommandError, msg:
    print_error_message(str(msg)
                        + "\n\nInvoke %s --help for help with usage.\n"
                        % program_name)
    exit_code = 2

# End the program.
sys.exit(exit_code)

########################################################################
# Local Variables:
# mode: python
# indent-tabs-mode: nil
# End:
