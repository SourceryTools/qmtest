########################################################################
#
# File:   setup_path.py
# Author: Alex Samuel
# Date:   2001-02-08
#
# Contents:
#   Python fragment to set up the Python lookup path to find QM modules.
#
# Copyright (c) 2001 by CodeSourcery, LLC.  All rights reserved. 
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
########################################################################

"""Execute this file with 'execfile' to set up the Python path for QM."""

########################################################################
# imports
########################################################################

import os.path
import sys

########################################################################
# functions
########################################################################

def add_to_python_path(*components):
    """Add a QM path to the Python module lookup path.

    Constructs the added path by appending the directory names in
    'components' to the base QM Python directory."""

    path = apply(os.path.join, (__lib_dir, ) + components)
    path = os.path.normpath(path)
    if path not in sys.path:
        # Insert the path element at the front, so that QM can replace
        # Python system libraries.  This also means that users cannot
        # replace QM libraries by setting the 'PYTHONPATH' environment
        # variable, since this is prepended to 'sys.path' before we get
        # here.
        sys.path.insert(0, path)


########################################################################
# script
########################################################################

# The path to the directory under which the QM Python files are
# installed.
__lib_dir = "@qm_lib_path@"
__share_dir = "@qm_share_path@"
__doc_dir = "@qm_doc_path@"

# Add things to the Python search path that we'll need.
add_to_python_path()
add_to_python_path("zope-dtml")
add_to_python_path("zope-dtml", "ExtensionClass")
add_to_python_path("sgmlop")
add_to_python_path("xmlrpc")
add_to_python_path("PyXML/build/lib.linux-i686-1.5")

# Now store the QM directories in the environment, so that other modules
# can access them.
os.environ["QM_LIB_PATH"] = os.path.normpath(__lib_dir)
os.environ["QM_SHARE_PATH"] = os.path.normpath(__share_dir)
os.environ["QM_DOC_PATH"] = os.path.normpath(__doc_dir)

#######################################################################
# Local Variables:
# mode: python
# indent-tabs-mode: nil
# End:
