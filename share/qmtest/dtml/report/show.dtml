<dtml-comment><!--

  File:   show.dtml
  Author: Alex Samuel
  Date:   2001-02-08

  Contents:
    Document template for web page to display or edit a test or resource.

  Copyright (C) 2001, 2002 CodeSourcery LLC.  

  For license terms see the file COPYING.

--></dtml-comment>
<dtml-var expr="GenerateXMLHeader()">
 <dtml-var expr="GenerateHtmlHeader(GetTitle())">
 <dtml-var expr="GenerateStartBody()">

  <dtml-comment><!--

    First the heading.  Display the item's ID, and if appropriate,
    controls for manupulating the item.

  --></dtml-comment>
  <table border="0" width="100%">
   <tbody>
    <tr>
     <td>
      <h3>
       <dtml-var expr="_.string.capwords(type)">
       <dtml-var expr="FormatId(item.GetId(), type, 'navigation')">
      </h3>
     </td>
     <td width="20%" align="right">
      <a href="http://www.qmtest.com"><img border="0"
                                           src="/images/logo.gif" /></a>
     </td>
    </tr>
   </tbody>
  </table>
  
  <table border="0"
         cellpadding="4"
         cellspacing="4"
         width="100%">
   <tbody>

    <dtml-comment><!--

      Display the test or resource class, and its summary and
      description. 

    --></dtml-comment>
    <tr class="heading">
     <td colspan="2">
      Class: <b><dtml-var expr="item.GetClassName()"></b>
     </td>
    </tr>
    <tr class="heading">
      <td colspan="2">
         <table border="0"
                cellpadding="0"
                cellspacing="0"
                width="100%">
           <tr class="heading">
             <td width="100%">
               <dtml-var expr="GetBriefClassDescription()">
             </td><td>
               <dtml-var expr="web.make_help_link_html(
                               GetClassDescription())">
             </td>
           </tr>
         </table>
      </td>
    </tr>
   </tbody>
  </table>

  <form action="<dtml-var expr="request.GetUrl()">" method="get">
    <table>
    <tr>
      <th>Column key:</th>
      <td><input type="text" name="col" size="20" 
                 value="<dtml-var expr="request.get('col', 'qmtest.run.uname')">"/></td>
    </tr>
    <tr>
      <th>Row key:</th>
      <td><input type="text" name="row" size="20" 
                 value="<dtml-var expr="request.get('row', 'qmtest.run.start_time')">"/></td>
    </tr>
    <tr>
      <th>Number of rows:</th>
      <td><input type="text" name="rows" size="3"
                 value="<dtml-var expr="_.int(request.get('rows', 10))">"/></td>
    </tr>
    <tr>
      <td colspan="2"><input type="submit"></td>
    </tr>
    </table>
  </form>
  <table>
    <dtml-let col="request.get('col', 'qmtest.run.uname')"
              row="request.get('row', 'qmtest.run.start_time')"
              rows="_.int(request.get('rows', 10))"
              columns="GetRunDatabase().GetAnnotations(col)"
              timeframe="GetRunDatabase().GetTimeframe(row, 1)"
              interval="(timeframe[1]-timeframe[0]) / rows">
    <tr class="heading">
      <th></th> 
      <dtml-in expr="columns">
        <dtml-let key=sequence-item>
          <th><dtml-var expr="key"></th> 
        </dtml-let>
      </dtml-in>
    </tr>
    <dtml-in expr="_.range(_.int((timeframe[1] - timeframe[0]) / interval))">
      <dtml-let index=sequence-item
                timestamp="timeframe[0] + interval * index">
        <tr>
          <th><dtml-var expr="FormatTimeIso(timestamp)"></th>
          <dtml-in expr="columns">
            <dtml-let column=sequence-item
                      run_id="GetRunDatabase().GetRunInTimeframe(col, column, row, timestamp, timestamp + interval)"
                      result="run_id != _.None and GetRunDatabase().GetAllRuns()[run_id].GetResult(item.GetId())"
                      outcome="result and result.GetOutcome() or 'UNTESTED'"
                      url="result and GetDetailUrl(run_id) or ''">
              <td class="<dtml-var expr="server.GetHTMLClassForOutcome(outcome)">">
                <dtml-if expr="url">
                  <a href="<dtml-var expr="url">"><dtml-var expr="outcome"></a>
                <dtml-else>
                  <dtml-var expr="outcome">
                </dtml-if>
              </td> 
            </dtml-let>
          </dtml-in>
        </tr>
      </dtml-let>
    </dtml-in>
    </dtml-let>
  </table>
 <dtml-var expr="GenerateStartScript()">
 <dtml-var expr="GenerateEndScript()">
 <dtml-var expr="GenerateEndBody()">
</html>

<dtml-comment><!-- 
  Local Variables:
  mode: xml
  indent-tabs-mode: nil
  fill-column:72
  End:
--></dtml-comment>
