########################################################################
#
# File:   track-help.txt
# Author: Alex Samuel
# Date:   2001-05-27
#
# Contents:
#   Common QMTtack help message templates.
#
# Copyright (c) 2001 by CodeSourcery, LLC.  All rights reserved. 
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
########################################################################

# Please keep diagnostics in alphabetical order by tag.

@ query help
**Python Queries**

%(program_name)s allows you to query issues using a Python expression.
The query returns all issues for which the query expression evaluates to
a boolean true value.  In Python, these values are taken as a boolean
false value: 'None', zero, an empty string, and an empty list, tuple, or
map.  Other values are taken to be true.

%(program_name)s evaluates the query expression for each issue.  The
issue's value for each field is placed in a variable of the same name as
the same field.  Normal Python arithmetic, logical, and miscellaneous
operators are also available.  

For example, this query:

    'user == "jones" and "GUI" in categories'

matches all issues for which the last modifying user is "jones" and
which is in the category "GUI".


@ summary display options help
**Summary Display Options**

The "Summary Display Options" dialog box allows you to control the
format of the "Issue Summary" page.  

  * With the **Show Fields** control, you may choose which issue fields
    you wish to display as columns in the "Issue Summary" page.  The
    fields listed in the "Show Fields" box are the columns in the
    summary table.  Fields that are not displayed are shown in the
    "Don't Show Fields" box.

    To add a column to the summary, select it in the "Don't Show Fields"
    box and click on the "<< Add" button.  To remove a column from the
    summary, select it in the "Show Fields" box and click on the "Remove
    >>" button.  To rearrange the order of columns, select a field in
    the "Show Fields" box and click on the "Move Up" or "Move Down"
    button.

  * If the **Open Issues** check box is selected, the issue summary
    shows only open issues.  Issues which are in a "closed" state (as
    determined in the issue class's state model) are always omitted from
    the summary.

  * The **Coloring** controls allow you to control how %(program_name)s
    shades the background colors of rows in the issue summary.  This
    coloring helps you visually to pick out important issues from the
    issue summary.

    You may choose an enumeration field for both the hue and the
    lightness of the background color.  For instance, if you choose the
    State field for the hue control, %(program_name)s chooses the
    background color for each issue according to its state.  Choose
    "None" in both controls to disable background coloring.


########################################################################
# Local Variables:
# mode: text
# indent-tabs-mode: nil
# fill-column: 72
# End:
