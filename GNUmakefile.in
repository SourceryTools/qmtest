######################################################### -*-Makefile-*-
#
# File:   Makefile
# Author: Alex Samuel
# Date:   2000-12-20
#
# Contents:
#   Top-level qm makefile.
# 
# Copyright (C) 2001, 2002, 2003 CodeSourcery LLC
#
# For license terms see the file COPYING.
#
########################################################################

# This trick is necessary to create a make variable containing a
# single space.  See the "(make)Flavors" info page.
NULLSTRING	:=
SPACE		:= $(NULLSTRING) # This comment needs to be here.

TOPDIR		= @top_srcdir@

# Python configuration.
PYTHONBIN	= @PYTHON@
PYTHON 		= PYTHONPATH=$(subst $(SPACE),:,$(PYTHONDIRS)) \
		  $(PYTHONBIN) -O
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHONDIRS	= $(TOPDIR)

# Whether or not we should generate documentation.
DOCUMENTATION = @MAINTAINER_MODE@

# HappyDoc configuration.
HAPPYDOC	= @HAPPYDOC@

# Places to install things.  The values substituted by configure
# involve $(exec_prefix), so we must define that even though it is not
# used directly.
prefix		= @prefix@
exec_prefix	= @exec_prefix@
datadir		= @datadir@
libdir		= @libdir@
bindir		= @bindir@

########################################################################
# Build Rules
########################################################################

# Do not want "make all" to build the documentation if the user did
# not request documentation at configure-time.
ifeq ($(DOCUMENTATION),1)
maybe_doc=doc
else
maybe_doc=
endif

.PHONY: all build doc
all: build $(maybe_doc)

build:
	$(PYTHON) ./setup.py build
# The distutils shipped with Python versions prior to 2.3
# buggily does not make these executable.
	chmod 755 build/scripts-*/*

doc:
	$(PYTHON) ./setup.py build_doc

# Build internal documentation.
ifneq ($(HAPPYDOC),)
doc-python:
	$(PYTHON) $(HAPPYDOC) qm
else
doc-python:
	@echo "The Python happydoc package is not available."
	@exit 1
endif

# Regenerate files that are generated by configure.
%: %.in
	./config.status

clean::
	$(PYTHON) ./setup.py clean -a
	rm -rf qm/test/doc/print
	rm -rf qm/test/doc/html

distclean: clean
	rm -f GNUmakefile config.cache config.status config.log
	rm -f MANIFEST

########################################################################
# Installation Rules
########################################################################

.PHONY: install
install: all
	$(PYTHON) ./setup.py install -O1 \
		--prefix="$(prefix)" \
		--install-data="$(datadir)" \
		--install-lib="$(libdir)" \
		--install-scripts="$(bindir)"

########################################################################
# Testing Rules
########################################################################

# Run tests.
.PHONY: check check-serial check-threads check-processes check-rsh

# The check-rsh target is not included here because it requires
# networking support.
check: check-serial check-threads check-processes

check-serial: build
	$(PYTHON) setup.py check --serial

check-threads: build
	$(PYTHON) setup.py check --threads

check-processes: build
	$(PYTHON) setup.py check --processes

check-rsh: build
	$(PYTHON) setup.py check --rsh
