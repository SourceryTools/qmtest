<?xml version="1.0"?>
<!--

  File:   idb-api.xml
  Author: Alex Samuel
  Date:   2000-11-07

  Contents:
    Chapter `Issue Database API' of qmtrack design document.

  This is part of the master document contained in qmtrack.xml.

  Copyright (C) 2000 CodeSourcery LLC.  This material may
  be distributed only subject to the terms and conditions set forth in
  the Software Carpentry Open Publication License, which is available at:

    http://www.software-carpentry.com/openpub-license.html

-->
<chapter><title>Issue Database API</title>

 <section><title>Issue database</title>

  <para>The <classname>IdbBase</classname> class is the base class for
  idb implementations.</para>

  <para>Creation and setup methods.
   <programlisting>
<![CDATA[
class IdbBase:
    """Base class for idb implementations."""
]]>
   </programlisting>
  </para>

  <para>Methods for retrieving issues and revisions.
   <programlisting>
<![CDATA[
    def GetIssue(self, iid):
        """Return the current revision of the issue corresponding to
        iid."""

    def GetIssueRevision(self, iid, revision_number):
        """Return the issue revision corresponding to iid and
        revision_number."""

    def GetIssueAllRevisions(self, iid):
        """Return an array of revisions of the issue given by iid.
        The array index is the revision number."""

    def GetCurrentRevisionNumber(self, iid):
        """Return the revision number of the current revision of the
        issue given by iid."""
]]>
   </programlisting>
  </para>

 </section>

 <section><title>File attachements</title>

  <para>The <classname>Attachment</classname> class represents an
  attachment.
   <programlisting>
<![CDATA[
class Attachment:
    """A file attachment to an issue."""

    def __init__(self, data, mime_type, description):
        """Create a new IdbAttachment instance."""

    def GetLocation(self):
        """Return a string giving the location of the attachment data.
        The contents of the string are opaque and
        implementation-defined, but uniquely and completely specify
        the location of the data."""

    def GetFile(self):
        """Return a readable file handle to the attachment data,
        positioned at the beginning."""

    def GetMimeType(self):
        """Return the MIME type of the attachment."""

    def GetDescription(self):
        """Return a description of the attachment."""
]]>
   </programlisting>
  </para>

 </section>

</chapter>

<!--
  Local Variables:
  indent-tabs-mode: nil
  sgml-indent-step: 1 
  sgml-always-quote-attributes: t
  sgml-general-insert-case: lower
  sgml-minimize-attributes: nil
  sgml-parent-document: ("qmtrack.xml" "book" "chapter")
  End:
-->
