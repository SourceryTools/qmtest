<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      metal:use-macro="context/@@standard_macros/page"
      >
<body>

<!--
This example template demonstrates the direct use of the supplemented
browser view (context/@@static_cookie_tree). No extra python code was
required, only ZCML configuration.

Feel free to use this template or parts of it in your own works
without any license restrictions, but please give credit where credit
is due.

Tip: Change the 'context/@@cookie_tree' expression below to
'context/@@folder_cookie_tree' for a tree with only folders.
-->

<div metal:fill-slot="body">

<table cellspacing="0" cellpadding="0"
       tal:define="root      context/@@cookie_tree;
                   result    root/getFlatDicts;
                   nodeDictList   python:result[0];
                   maxDepth       python:result[1]">

<!-- the root needs some special treatment, since it is not in nodeDictList -->
<tr>
  <td width="16">
    <img src="" tal:define="icon context/@@zmi_icon | nothing"
         tal:replace="structure icon" />
  </td>

  <td class="list-item"
      tal:attributes="colspan python:maxDepth+2">
    <b tal:content="root/getId() | string:[top]"></b>
  </td>
</tr>

<tr tal:repeat="nodeInfo nodeDictList">
<tal:block tal:define="node nodeInfo/node">

  <!-- generate the lines that will point to the next node in the level -->
  <td style="width:16px" tal:repeat="state nodeInfo/row-state">
    <img tal:attributes="src context/++resource++tree_images/vline.png"
         tal:condition="state" alt="|" border="0" />
  </td>

  <td style="width:16px">
    <!-- if we have children, let's allow them to be expanded and collapsed -->
    <a href=""
       tal:attributes="href string:?tree-state=${nodeInfo/tree-state}"
       tal:condition="node/hasChildren">

      <!-- If the node is the last node of the level, then we need to use
           different plus and minus that do not have a line going off 
           downward -->
      <tal:block condition="not:nodeInfo/last-level-node">
        <img tal:attributes="src context/++resource++tree_images/plus_vline.png"
             tal:condition="not:node/expanded" alt="+" border="0" />
        <img tal:attributes="src context/++resource++tree_images/minus_vline.png"
             tal:condition="node/expanded" alt="-" border="0" />
      </tal:block>

      <tal:block condition="nodeInfo/last-level-node">
        <img tal:attributes="src context/++resource++tree_images/plus.png"
             tal:condition="not:node/expanded" alt="+" border="0" />
        <img tal:attributes="src context/++resource++tree_images/minus.png"
             tal:condition="node/expanded" alt="-" border="0" />
      </tal:block>
    </a>

    <!-- this node has no children, so either display a T or L as
         lines, depending on whether we're the last node in this level
         or not -->
    <tal:block condition="not:node/hasChildren">
      <img tal:attributes="src context/++resource++tree_images/tline.png"
           tal:condition="not:nodeInfo/last-level-node" alt="" border="0" />
      <img tal:attributes="src context/++resource++tree_images/lline.png"
           tal:condition="nodeInfo/last-level-node" alt="" border="0" />
    </tal:block>
  </td>

  <td style="width:16px"
      tal:define="object nocall:node/context;
                  icon   object/@@zmi_icon | nothing">
    <img src="" tal:replace="structure icon" />
  </td>

  <td class="list-item"
      tal:attributes="colspan python:maxDepth-len(nodeInfo['row-state'])+1">
    &nbsp;<a href=""
       tal:attributes="href 
           string:${node/context/@@absolute_url}/@@SelectedManagementView.html"
       tal:content="node/context/zope:name">
      node/id
    </a>
  </td>

</tal:block>
</tr>

</table>

</div>
</body>
</html>
