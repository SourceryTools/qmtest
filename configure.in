##################################################### -*-shell-script-*-
#
# File:   configure.in
# Author: Alex Samuel
# Date:   2001-01-09
#
# Contents:
#   Autoconf configuration for QM.
#
# Copyright (c) 2001, 2002, 2003 by CodeSourcery, LLC.  All rights reserved. 
#
# For license terms see the file COPYING.
#
########################################################################

AC_INIT(configure.in)

dnl ####################################################################
dnl Enable maintainer mode.
dnl ####################################################################

AC_ARG_ENABLE(maintainer-mode, 
              [  --enable-maintainer-mode configure for development],
              if test x${enableval} = xno; then
                MAINTAINER_MODE=0
              else
                MAINTAINER_MODE=1
              fi,
              MAINTAINER_MODE=0)
AC_SUBST(MAINTAINER_MODE)
	     
dnl ####################################################################
dnl Find the Python interpreter.  If the user specified the 
dnl --with-python option, use its value, after checking that it exists.
dnl Otherwise, look in the PATH.
dnl ####################################################################

AC_ARG_WITH(
  python, 
  [  --with-python=PATH      specify the Python interpreter],
  PYTHON="$with_python",
  PYTHON=""
)

if test -n "$PYTHON" -a "$PYTHON" != yes; then
  AC_CHECK_FILE(
    $PYTHON, 
    , 
    echo "Cannot find Python interpreter $PYTHON."; exit 1
  )
else
  AC_PATH_PROG(PYTHON, python2 python, python)
fi

dnl ####################################################################
dnl Determine the Python version.
dnl ####################################################################

# The code used to check the version only reports the version accurately
# with Python 2.0 or greater -- but the minimum acceptable version of
# Python is already higher than that.
AC_MSG_CHECKING(Python version)
cat > python-ver.py <<EOF
try:
  import sys
  print sys.version_info[[0]]
except:
  print 0
EOF
PYTHON_MAJOR=`$PYTHON python-ver.py`
cat > python-ver.py <<EOF
try:
  import sys
  print sys.version_info[[1]]
except:
  print 0
EOF
PYTHON_MINOR=`$PYTHON python-ver.py`
rm python-ver.py
PYTHON_VERSION="${PYTHON_MAJOR}.${PYTHON_MINOR}"
AC_MSG_RESULT($PYTHON_VERSION)

# Some Python versions before 2.1 have serious bugs if threads and
# fork are used together.  Therefore, Python 2.1 or higher is required.
if test "$PYTHON_MAJOR" -lt 2 || \
   (test "$PYTHON_MAJOR" -eq 2 && test "$PYTHON_MINOR" -lt 1); then
  AC_MSG_ERROR(QM requires Python version 2.1 or greater)
fi

AC_MSG_CHECKING(Python platform)
PYTHON_PLATFORM=`$PYTHON -c "import distutils.util; print distutils.util.get_platform()" 2>/dev/null`
if test $? -ne 0; then
  AC_MSG_RESULT(could not be determined)
  AC_MSG_ERROR(Python distutils module is not installed)
fi
AC_MSG_RESULT($PYTHON_PLATFORM)
AC_SUBST(PYTHON_PLATFORM)

dnl ####################################################################
dnl Look for HappyDoc, which we use to build source documentation.
dnl ####################################################################

AC_PATH_PROG(HAPPYDOC, happydoc)

# Do not try to build documentation unless --enable-maintainer-mode
# was specified.  The documentation is pre-generated for releases.
if test $MAINTAINER_MODE = 0; then
  AC_MSG_WARN(Documentation is only built with --enable-maintainer-mode.)
fi

dnl ####################################################################
dnl Generate results
dnl ####################################################################

AC_OUTPUT(
  GNUmakefile
)
