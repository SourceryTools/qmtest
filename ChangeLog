2001-05-31  Alex Samuel  <samuel@codesourcery.com>

	* qm/test/cmdline.py (Command.remote_option_spec): New attribute.
	(Command.conflicting_options_spec): Update.
	(Command.commands_spec): Add --remote-hosts option.
	(Command.add_test_id): Handle --remote-hosts option.
	* qm/test/base.py (RemoteTestHost): New class.
	(MultiProcessEngine): Generalize to...
	(SubprocessEngine): ... this new class.
	(MultiProcessEngine): New class.
	(MultiThreadEngine._Run): Don't call AsMap.
	(MultiRshEngine): New class.
	(RshEngine.__init__): Use RemoteTestHost instances.
	(RshEngine._Run): Likewise.

2001-05-31  Alex Samuel  <samuel@codesourcery.com>

	* qm/xmlutil.py (load_xml_file): Split into...
	(load_xml): ... this new function.
	* qm/platform_linux.py (get_user_name): New function.
	* qm/platform_win32.py (get_user_name): Likewise.

	* qm/test/cmdline.py (Command.MakeContext): Look for
	--context-file and --context arguments at the same time.  Allow
	--context-file from stdin.
	(Command.add_test_id): Use MultiProcessEngine.
	(Command.__WriteResults): Use write_results.
	* qm/test/base.py (MultiThreadEngine): Generalize into... 
	(ConcurrentEngine): ... this.
	(MultiProcessEngine): New class.
	(MultiThreadEngine): Likewise.
	(CommandEngine): Reimplement, generalized.
	(LocalCommandEngine): New class.
	(RshEngine): Likewise.
	(write_results): New function.
	(save_results): Likewise.
	(read_results): Likewise.
	(load_results): Use it.
	(__results_from_dom): Rename to...
	(_results_from_dom): ... this.

2001-05-30  Alex Samuel  <samuel@codesourcery.com>

	* qm/structured_text.py (html_help_text): New variable.
	* qm/fields.py (TextField.FormatValueAsHtml): Show indication when
	editing structured text.
	(EnumerationField.__GetAvailableEnumerals): Add time zone.
	* qm/track/web/show.py (ShowPageInfo.FormatFieldValue): Handle
	user and timezone specially when editing.

2001-05-29  Alex Samuel  <samuel@codesourcery.com>

	* share/diagnostics/track-help.txt: New file.

2001-05-29  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/issue.py (Issue.GetField): Use field's default if the
	issue doesn't have a value.

2001-05-29  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (make_select): Add form_name parameter.
	* qm/track/web/query.py (QueryPageInfo.__init__): Don't get field
	names. 
	(QueryPageInfo.MakeQueryForm): Add name parameter.
	(QueryPageInfo.GetFieldTypeDescription): Remove.
	(QueryPageInfo.MakePythonQueryHelp): New method.
	(QueryPageInfo.MakeCategorySelect): Likewise.
	(QueryPageInfo.MakeStateSelect): Likewise.
	* qm/track/config.py (__initialize_module): Load help diagnostics.
	* share/dtml/track/query.dtml: Remove help info.  Add browse
	controls. 
	* share/dtml/track/index.dtml: Adjust labels for query.

2001-05-29  Alex Samuel  <samuel@codesourcery.com>

	* qm/fields.py (SetField.GetHtmlHelp): Don't add old help twice.
	* qm/common.py (Enumeral.__cmp__): Check RHS against enumerals for
	strings only.
	* qm/track/issue_class.py (IidField.__init__): copy attributes.
	(DiscussionField): New class.
	* qm/track/issue.py (Issue.MakeDomElement): Compare value as string.
	* qm/track/config.py (setup_idb_for_internal_use): Add discussion
	field.
	* qm/track/triggers/discussion.py: New file.
	* qm/track/web/web.py (HistoryPageInfo.FormatRevisionDiff): Handle
	set fields specially.
	
2001-05-28  Alex Samuel  <samuel@codesourcery.com>

	* doc/manual/test-manual.xml: Mention scheduling across threads
	and hosts.

2001-05-28  Alex Samuel  <samuel@codesourcery.com>

	* doc/manual/manual.xml: Include track-manual.xml.
	* doc/manual/track-manual.xml: New file.
	* doc/manual/test-manual.xml: Adjust.

2001-05-28  Alex Samuel  <samuel@codesourcery.com>

	* qm/graph.py: Add doc string.
	(CycleError): New class.
	(__sort_helper): Handle node missing from edges map.
	(_partition): New function.
	(partition_as_map): Likewise.
	* qm/common.py (Lock): New class.
	(MutexMixin): Likewise.
	(OrderedMap.AsMap): New method.
	(print_message): Swap order of parameters.
	* share/diagnostics/test.txt (invalid concurrency): Likewise.
	* qm/test/xmldb.py (Database): Also derive from MutexMixin.
	(Database.GetClassPaths): Lock.
	(Database.HasTest): Likewise.
	(Database.GetTest): Likewise.
	(Database.WriteTest): Likewise.
	(Database.RemoveTest): Likewise.
	(Database.GetTestIds): Likewise.
	(Database.HasAction): Likewise.
	(Database.GetAction): Likewise.
	(Database.WriteAction): Likewise.
	(Database.RemoveAction): Likewise.
	(Database.GetActionIds): Likewise.
	* qm/test/cmdline.py (Command.concurrent_option_spec): New
	attribute.
	(Command.commands_spec): Include it.
	(Command.add_test_id): Handle --threads option.
	* qm/test/base.py (Engine): Rename to...
	(InProcessEngine): ... this.
	(Engine): New class.
	(MultiThreadEngine): Likewise.
	(CommandEngine): Likewise.
	(load_database): Adjust call to print_message.

2001-05-24  Alex Samuel  <samuel@codesourcery.com>

	* README: Mention Distutils.
	* qm/web.py (Session.__init__): Increase default timeout.
	* qm/platform_linux.py (RunProgramError): New class.
	(ProgramTerminateBySignalError): Likewise.
	(ProgramStoppedError): Likewise.
	(run_program_captured): Add doc string.  Use /dev/null for empty
	stdin.  
	(get_temp_directory): New function.
	* qm/platform.py (RunProgramError): Remove.
	(ProgramTerminateBySignalError): Likewise.
	(ProgramStoppedError): Likewise.
	* qm/label.py (thunk): Change + to x.
	(normpath): Remove multiple separators.
	(join): Normalize result.
	(to_path): Handle root path.
	(is_prefix): New function.
	* qm/fields.py (IntegerField.FormatValueAsHtml): Implement hidden
	style.
	(TextField.FormatValueAsHtml): Likewise.  Convert value to
	string.  Escape preformatted text.
	(SetField.FormatValueAsHtml): Implement hidden style.
	(EnumerationField.FormatValueAsHtml): Likewise.
	* qm/common.py (Enumeral.__cmp__): Check that RHS is valid enumeral.
	(load_module): Adjust Python path while loading module.
	(ends_with): New function.
	* share/dtml/test/suite.dtml: Adjust.
	* share/diagnostics/track.txt (address in use): Remove.
	* share/diagnostics/test.txt (unknown test or suite id): Adjust.
	* share/diagnostics/common.txt (address in use): New diagnostic.
	(could not read file): Likewise.
	* qm/track/qmtrack.in: Write message if KeyboardInterrupt.
	* qm/test/qmtest.in (program_name): Handle KeyboardInterrupt.
	* qm/test/cmdline.py (Command.context_file_spec): New attribute.
	(Command.commands_spec): Include it.
	(Command.MakeContext): Handle context-file option.
	(Command.__ParseContextAssignment): New method.
	(Command.add_test_id): Extract results from profile context.
	(Command.WriteSummary): Treat missing expected outcome as PASS.
	Adjust formatting.
	* qm/test/base.py (InstanceBase.SetWorkingDirectory): Use
	GetArguments. 
	(Suite.__init__): Initialize __test_id_cache.
	(Suite.GetTestIds): Cache result.
	(ResultWrapper.MakeDomNode): Handle sequence property values.
	(Engine.RunTests): Pass through KeyboardInterrupt.
	(load_database): Print warning when import fails.
	* qm/test/web/web.py (PageInfo.FormatTestId): Add within parameter.
	(PageInfo.FormatActionId): Likewise.
	(PageInfo.FormatSuiteId): Likewise.
	* qm/test/web/suite.py (ShowPageInfo.MakeAbsoluteId): New method.
	* qm/test/web/show.py (ShowPageInfo.IsShowField): Remove.
	(ShowPageInfo.FormatFieldValue): Handle hidden and read-only fields.

2001-05-22  Alex Samuel  <samuel@codesourcery.com>

	* doc/qm.mod: Add note.
	* doc/manual/test-manual.xml: Corrections.
	* doc/manual/test-tour.xml: Likewise.

2001-05-21  Alex Samuel  <samuel@codesourcery.com>

	* qm/common.py (print_message): New function.
	(verbose): New variable.
	* qm/test/cmdline.py (Command.profile_option_spec): New attribute.
	(Command.commands_spec): Include it.
	(Command.Execute): Set global verbose value.
	(Command.add_test_id): Add profiling.
	* qm/test/base.py (Engine.null_function): Add messages.

2001-05-18  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/triggers/notification.py (_NotifyTrigger.Postupdate):
	Fix syntax error.

2001-05-17  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/triggers/notification.py (_NotifyTrigger.Postupdate):
	Set subject differently for new issues.

2001-05-17  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (escape): Don't handle empty strings specially.
	(make_help_link_html): Adjust spacing.
	* qm/fields.py (Field.FormatValueAsText): Add columns parameter.
	(Field.GetHtmlHelp): Mention field name at end.
	(IntegerField.FormatValueAsText): Add columns parameter.
	(TextField.FormatValueAsText): Likewise.
	(TextField.FormatValueAsHtml): Adjust output.
	(SetField.FormatValueAsText): Add columns parameter.
	(AttachmentField.FormatValueAsText): Likewise.
	(EnumerationField.FormatValueAsText): Likewise.
	* qm/common.py (indent_lines): New function.
	(wrap_lines): Likewise.
	* qm/track/web/summary.py (SummaryPageInfo.__init__): Add
	sort_order parameter.
	(handle_summary): Put sort order in user configuration.
	* qm/track/web/show.py (handle_submit): Don't format structured
	text errors here.
	* qm/track/triggers/notification.py
	(_NotifyTrigger.__MakeMessage): Improve output format.
	* qm/track/server.py (start_server): Register path to manual.
	* qm/track/qmtrack.in: Set qm.common.program_name.
	* qm/track/issue_class.py (StateField.GetHelp): Fix spacing in
	enumeral list.
	* share/web/stylesheets/qm.css (span.error): Use darker red.
	* share/dtml/track/show.dtml: Space Help buttons.

2001-05-17  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (PageInfo.MakeLoginForm): Adjust HTML.
	(PageInfo.UserIsInGroup): New method.
	(make_form_for_request): Add name parameter.
	(handle_login): Handle exceptions.
	* qm/user.py: Add doc string.
	(Group): New class.
	(DefaultDatabase.GetGroupIds): New method.
	(DefaultDatabase.GetGroup): Likewise.
	(XmlDatabase.__init__): Load groups.
	(XmlDatabase.GetGroupIds): New method.
	(XmlDatabase.GetGroup): Likewise.
	* qm/platform_linux.py (CLOSE_STREAM): New variable.
	(replace_program): New function.
	(run_program): Likewise.
	* qm/platform.py (RunProgramError): New class.
	(ProgramTerminatedBySignalError): Likewise.
	(ProgramStoppedError): Likewise.
	* qm/common.py (Empty): New class.
	* qm/track/web/index.py (IndexPageInfo.MakeNewForm): Specify form
	name. 
	(IndexPageInfo.MakeShowForm): Likewise.
	(IndexPageInfo.MakeEditForm): Remove.
	(IndexPageInfo.MakeShowAllForm): Likewise.
	(IndexPageInfo.MakeQueryForm): Specify form name.
	(IndexPageInfo.MakeShutdownForm): Likewise.
	(IndexPageInfo.MakeLogoutForm): Likewise.
	* qm/track/server.py (handle_shutdown): Disallow non-administrators. 
	
	* share/xml/users.xml.template: Add a group.
	* share/xml/user.dtd (users): Allow group elements.
	(group): New element.
	(user-id): Likewise.
	* share/web/stylesheets/qm.css (a.help-link): Don't specify
	decorations. 
	* share/dtml/track/index.dtml: Adjust buttons.  Show shutdown
	button for administrators only.
	* share/diagnostics/common.txt (disabled account): New diagnostic.
	(invalid login): Likewise.
	(shutdown not allowed): Likewise.

	* doc/manual/manual.xml (common-manual.xml): New entity.  Include it. 
	* doc/manual/common-manual.xml: New file.

2001-05-16  Alex Samuel  <samuel@codesourcery.com>

	* qm/fields.py (Field.GetDefaultValue): Copy the result.
	* qm/common.py (copy): New function.
	* qm/track/server.py (start_server): Don't call get_host_name.
	* qm/test/cmdline.py (Command.Execute): Use load_database.
	* qm/test/base.py (Suite.GetTestIds): Use dirname.  Handle paths
	differently in implicit suites.
	(Database.GetPath): New method.
	(Database.GetClassPaths): Use _classes directory if it exists.
	(load_database): New function.

2001-05-15  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/triggers/notification.py
	(NotifyByUidFieldTrigger.Preupdate): Fix syntax.

2001-05-15  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/triggers/notification.py
	(NotifyByUidFieldTrigger.Preupdate): Don't subscribe a user twice.
	* qm/common.py (Enumeral.__cmp__): Handle TypeError.

2001-05-15  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/triggers/notification.py
	(NotifyByUidFieldTrigger.Preupdate): Handle new issues correctly.

2001-05-15  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/issue_class.py (IssueClass.__init__): Adjust default
	state model.
	* qm/track/issue.py (eval_revision_expression): Improve doc
	string.  Add _new to namespace.
	* qm/track/config.py (setup_idb_for_internal_use): Adjust.
	* qm/track/triggers/notification.py
	(_NotifyTrigger.__MakeMessage): Handle new issues correctly.

2001-05-15  Alex Samuel  <samuel@codesourcery.com>

	* qm/platform.py: Remove contents and split it into...
	* qm/platform_linux.py: ... this new file, and...
	* qm/platform_win32.py: ... this, likewise.
	* qm/track/server.py (execute): Let SignalException through.
	* qm/track/qmtrack.in: Handle SignalException.
	* qm/track/memory_idb.py (MemoryIdb.Close): Call __Write.
	(MemoryIdb.__Write): New method.
	(MemoryIdb.AddIssueClass): Call __Write.
	(MemoryIdb.__InsertIssue): Likewise.
	* qm/test/qmtest.in: Import qm.platform.

2001-05-14  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (make_url_for_request): Remove.
	Use AsUrl instead of make_url_for_request throughout.
	* qm/fields.py: Likewise.
	* qm/test/web/show.py: Likewise.
	* qm/test/web/suite.py: Likewise.
	* qm/test/web/web.py: Likewise.
	* qm/track/web/index.py: Likewise.
	* qm/track/web/show.py: Likewise.
	* qm/track/web/summary.py: Likewise.
	* qm/track/web/web.py: Likewise.
	
2001-05-14  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (WebRequestHandler.__HandlePageCacheRequest): New
	method. 
	(WebRequestHandler.__HandleSessionCacheRequest): Likewise.
	(WebRequestHandler.__HandleRequest): Call them.
	(WebRequest.AsUrl): New method.
	(make_set_control): Adjust for using page cache.
	(make_popup_dialog_script): Rename to...
	(make_popup_dialog): ... this and adjust for using page cache.
	(make_confirmation_dialog_script): Rename to...
	(make_confirmation_dialog): ... this, and remove function_name
	parameter. 
	(Session.make_button_for_popup): Reimplement using page cache.
	Leave old implementation, but disabled.
	(cache_page): New function.
	(get_from_cache): Likewise.
	(_page_cache_path): New variable.
	(_page_cache_name): Likewise.
	(_session_cache_name): Likewise.
	* qm/platform.py: Adjust formatting.
	* qm/fields.py (TextField.FormatValueAsHtml): Escape field values.
	(AttachmentField.FormatValueAsHtml): Use make_button_for_popup.
	* qm/common.py (make_temporary_directory): New function.
	(add_exit_function): Likewise.
	(_at_exit): Likewise.
	(_exit_functions): New variable.
	
	* share/diagnostics/common.txt (temp dir error): New diagnostic.
	* share/dtml/test/add-prerequisite.dtml: (add_prerequisite):
	Likewise.
	* share/dtml/test/add-category.dtml (add_category): Likewise.
	* share/dtml/test/add-action.dtml (add_action): Hard-code form
	field names. 
	* share/dtml/test/suite.dtml: Adjust for MakeDeleteScript.
	* share/dtml/test/show.dtml: Likewise.

	* qm/track/web/web.py (make_url_for_attachment): Stash attachment
	file name at end of URL.
	* qm/track/web/summary.py (SummaryPageInfo.__init__): Pass request
	to make_button_for_popup.
	* qm/test/web/web.py (PageInfo.FormatTestId): Add relative_to
	parameter. 
	(PageInfo.FormatActionId): Likewise.
	(make_server): Don't register add-action, add-category,
	add-prerequisite. 
	* qm/test/web/suite.py (ShowPageInfo.MakeDeleteScript): Adjust for
	make_confirmation_dialog. 
	* qm/test/web/show.py (ShowPageInfo.MakePrerequisitesControl):
	Generate page here for make_set_control.
	(ShowPageInfo.MakeActionsControl): Likewise.
	(ShowPageInfo.MakeCategoriesControl): Likewise.
	(ShowPageInfo.MakeDeleteScript): Adjust for make_confirmation_dialog.
	(AddPrerequisitePageInfo.__init__): Add base_path parameter.
	(AddActionPageInfo.__init__): Add action_path parameter.
	(handle_add_prerequisite): Remove.
	(handle_add_action): Likewise.
	(handle_add_category): Likewise.
	* qm/test/classes/python.py (ExecTest.fields): Set verbatim
	attribute on expression field.
	* qm/test/xmldb.py (Database.__GetPrerequisitesFromDomNode): Don't
	make IDs absolute here.
	(Database.__GetActionsFromDomNode): Likewise.
	(Database.__MakeDomNodeForTest): Don't reverse absolute IDs here.
	(Database.__MakeDomNodeForAction): Likewise.
	* qm/test/base.py (Test.GetPrerequisites): Add absolue parameter.
	(Test.GetActions): Likewise.
	(PrerequisiteMapAdapter.__getitem__): Use absolute IDs. 
	(Engine.null_function): Likewise, for prerequisites and actions.

2001-05-11  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/web/summary.py (DisplayOptionsPageInfo.__init__): Don't
	show hidden fields.
	* qm/track/config.py (setup_idb_for_test): Make the notification
	field hidden.

2001-05-11  Alex Samuel  <samuel@codesourcery.com>

	* qm/test/xmldb.py (scan_dir_for_suite_dirs): Skip directories
	named CVS.
	* qm/test/web/suite.py (ShowPageInfo.__init__): Construct controls
	for tests and suites here.
	* share/dtml/test/suite.dtml: Use test and suite controls from
	page info.

2001-05-11  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (PageInfo.common_javascript): Rename update_set to
	update_from_select_list.  Add move_option and swap_option.
	(__counter): Remove.
	(make_set_control): Use _counter.
	(_help_counter): Remove.
	(make_help_link_html): Use _counter.
	(make_select): Add default arguments.
	(make_choose_control): New function.
	(make_button_for_popup): Likewise.
	(_counter): New variable.
	* qm/fields.py (EnumerationField.GetTypeDescription): Fix quoting.
	(UidField.FormatValueAsHtml): Remove extraneous arguments to
	make_select. 
	* qm/track/web/summary.py (SummaryPageInfo.__init__): Add
	field_names parameter.  Generate display options page.
	(SummaryPageInfo.IsLinkToIssue): Remove.
	(DisplayOptionsPageInfo): New class.
	(handle_summary): Figure out fields to show.
	* share/dtml/track/summary.dtml: Add Display Options button.
	Adjust. 
	* share/dtml/track/summary-display-options.dtml: New file.

	* doc/manual/manual.xml: Fix title.

2001-05-10  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (make_select): New function.
	* qm/user.py (DefaultDatabase.keys): New method.
	(XmlDatabase.keys): Likewise.
	* qm/fields.py (EnumerationField.FormatValueAsHtml): Use
	make_select.
	(UidField.FormatValueAsHtml): New method.
	* share/xml/users.xml.test-values: New file.
	* qm/track/config.py (initialize_idb): Add test_values parameter.
	Initialize test values and test user database.
	* qm/track/cmdline.py (Command.__PerformInitialize): Don't
	generate test values here.

2001-05-10  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (make_javascript_string): Don't escape slashes.
	* qm/platform.py: New class.
	(MailError.send_email): New function.
	* qm/fields.py (Field.FormatValueAsText): New method.
	(IntegerField.FormatValueAsText): Likewise.
	(TextField.FormatValueAsText): Likewise.
	(SetField.FormatValueAsText): Likewise.
	(AttachmentField.FormatValueAsText): Likewise.
	(EnumerationField.FormatValueAsText): Likewise.
	(UidField.__init__): Use default user ID as default value.
	* qm/common.py (RcConfiguration.Get): Return default if no rc file
	loaded. 
	* share/diagnostics/common.txt (sendmail error): New diagnostic.
	* qm/track/triggers/state.py (Trigger.Preupdate): Call
	eval_revision_expression. 
	* qm/track/triggers/notification.py: New file.
	* qm/track/qmtrack.in: Load rc file.
	* qm/track/issue.py (eval_expression): Replace with...
	(eval_issue_expression): ... this.
	(eval_revision_expression): New function.
	* qm/track/idb.py (IdbBase.Query): Call eval_issue_expression.
	* qm/track/config.py (setup_idb_for_test): Add notification stuff.
	
2001-05-07  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (parse_url_query): Unquote the script URL.
	(make_javascript_string): Escape forward slashes.
	* qm/common.py (Enumeral): New class.
	* qm/fields.py (Field.__init__): Add initialze_to_default attribute. 
	(Field.GetAttributeNames): New method.
	(EnumerationField.__init__): Make an Enumeral.
	(EnumerationField.GetTypeDescription): Use enumeral strings.
	(EnumerationField.Validate): Rewrite.
	(EnumerationField.GetEnumerals): Modify for Enumeral.
	(EnumerationField.ValueToName): Remove.
	(EnumerationField.ParseFormValue): Make an Enumeral.
	(EnumerationField.FormEncodeValue): Use enumeral string.
	(EnumerationField.FormDecodeValue): Make an Enumeral.
	(EnumerationField.FormatValueAsHtml): Modify for Enumeral.
	(EnumerationField.MakeDomNodeForValue): Likewise.
	(EnumerationField.GetHelp): Likewise.
	(EnumerationField.__GetAvailableEnumerals): New method.

	* qm/track/web/show.py (ShowPageInfo.__init__): Rename
	field_errors to errors.  Process structured text.
	(ShowPageInfo.FormatFieldValue): Handle initialize_to_default
	attribute. 
	(handle_submit): Handle trigger rejections.
	* qm/track/triggers: New directory.
	* qm/track/triggers/__init__.py: New file.
	* qm/track/triggers/state.py: Likewise.
	* qm/track/web/issue_class.py: Likewise.
	* qm/track/server.py (start_server): Register show-issue-class.
	* qm/track/memory_idb.py (MemoryIdb.GetIssue): Fix parameter name
	collision.  Adjust trigger treatment.
	(MemoryIdb.GetAllRevisions): Likewise.
	(MemoryIdb.__InsertIssue): Likewise.
	* qm/track/sql_idb.py (SqlIdb.GetIssues): Likewise.
	(SqlIdb.GetIssue): Likewise.
	(SqlIdb.GetAllRevisions): Likewise.
	(remap): Remove crud.
	(pprint_ast): Likewise.
	* qm/track/issue_class.py (default_states): Remove.
	(default_state_model): New variable.
	(default_state_model): New class.
	(default_state_model): Likewise.
	(TriggerResult): Likewise.
	(Trigger): Likewise.
	(State): Likewise.
	(TransitionCondition): Likewise.
	(Transition): Likewise.
	(StateModel): Likewise.
	(StateField): Likewise.
	(IssueClass.__init__): Replace states parameter with state_model.
	Initialize __triggers.  Create the state field.
	(IssueClass.RegisterTrigger): New method.
	(IssueClass.GetTriggers): Likewise.
	(_initialize_module): New function.
	Call it.
	* qm/track/issue.py (eval_expression): New function.
	(allowed_builtins): New variable.
	(_initialize_module): New function.
	Call it.
	* qm/track/idb.py (Trigger): Remove.
	(TriggerOutcome): Likewise.
	(TriggerRejectError): New class.
	(IdbBase.__init__): Remove __triggers attribute.
	(IdbBase.RegisterTrigger): Remove.
	(IdbBase.UnregisterTrigger): Likewise.
	(IdbBase.GetTriggers): Likewise.
	(IdbBase.Query): Call eval_expression instead of rexec stuff.
	(IdbBase.__InvokeGetTriggers): Rewrite.
	(IdbBase.__InvokePreupdateTriggers): Likewise.
	(IdbBase.__InvokePostupdateTriggers): Likewise.
	* qm/track/cmdline.py (Command.__PerformInitialize): Process
	structured text message. 

	* share/dtml/track/show.dtml: Adjust markup to show errors.
	* share/dtml/track/issue-class.dtml: New file.
	* share/diagnostics/track.txt (no changes): New diagonstic.
	(no transition): Likewise.
	(not initial state): Likewise.
	(transition condition failed): Likewise.

2001-05-01  Alex Samuel  <samuel@codesourcery.com>

	* qm/common.py (RcConfiguration.Get): Remove mention of DEFAULT.
	Use section parameter correctly.
	* qm/platform.py: New file.
	* qm/test/web/web.py (start_server): Rename to...
	(make_server): ... this.  Return server instead of running it.
	* qm/test/xmldb.py (Database.GetClassPaths): New method.
	* qm/test/cmdline.py (Command.start_browser_option_spec): New
	variable. 
	(Command.commands_spec): Use it.  Remove edit and template
	commands. 
	(Command.HasGlobalOption): New method.
	(Command.HasCommandOption): Likewise.
	(Command.__ExecuteEdit): Remove.
	(Command.__EditTest): Likewise.
	(Command.__ExecuteTemplate): Likewise.
	(Command.__ExecuteServer): Start browser if requested.
	* qm/test/base.py (Database.GetClassPaths): New method.
	(get_class): Remove extra_paths parameter.  Use the database's
	class paths.
	* share/tutorial/test/tdb/_classes/: New directory.
	* share/tutorial/test/count.py: Move to...
	* share/tutorial/test/tdb/_classes/count.py: ... here.
	* share/diagnostics/test-help.txt (action class control): Mention
	_classes subdirectory.
	(test class control): Likewise.
	* share/diagnostics/common.txt (browser error): New diagnostic.
	* doc/manual/manual.xml: Include test-reference.xml.
	* doc/manual/test-manual.xml: Add section on specifying test classes. 
	* doc/manual/test-reference.xml: New file.
	
2001-04-30  Benjamin Chelf  <chelf@codesourcery.com>

	* install.bat: New file.

2001-04-30  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtest/core.xml: Paste in text from design document.

2001-04-30  Alex Samuel  <samuel@codesourcery.com>

	* Makefile.in (PYTHONDOCDIRS): Comment out.
	* install.py (doc_files): Add manual PDF file.
	(doc_dirs): New variable.
	Substitute @qm_doc_path2 in setup_path.py.
	Install documentation directories.
	* qm/Makefile.in (setup_path.py): Substitute @qm_doc_path@.
	* qm/setup_path.py.in (__doc_dir): New variable.
	Set QM_DOC_PATH environment variable.
	* qm/common.py (get_doc_directory): New function.
	* qm/test/web/web.py (start_server): Register manual directory.
	* qm/web.py (PageInfo.html_generator): Remove.
	(session_id_field): In show_help, open window with toolbar and
	scrollbars options.
	(PageInfo.GetProgramName): New method.
	(PageInfo.GenerateHtmlHeader): Use it.
	(make_help_link_html): Generate page from DTML.
	* share/dtml/help.dtml: New file.
	* doc/Makefile.in (SUBDIRS): Remove design doc directories.
	* doc/manual/Makefile.in (DOCBOOKMAIN): Change to manual.xml.
	* doc/manual/main.xml: Rename to...
	* doc/manual/manual.xml: ... this.

2001-04-29  Alex Samuel  <samuel@codesourcery.com>

	* qm/test/web/web.py (start_server): Register delete-test,
	delete-action, and delete-suite scripts.
	* qm/test/web/suite.py (ShowPageInfo.MakeDeleteScript): New method.
	(handle_delete): New function.
	* qm/test/web/show.py (ShowPageInfo.MakeDeleteScript): New method.
	(handle_delete): New function.
	* qm/test/xmldb.py (Database.RemoveTest): New method.
	(Database.RemoveAction): Likewise.
	(Database.RemoveSuite): Likewise.
	* qm/test/base.py (Database.RemoveTest): New method.
	(Database.RemoveSuite): Likewise.
	(Database.RemoveAction): Likewise.
	* qm/web.py (make_popup_dialog_script): New function.
	(make_confirmation_dialog_script): Likewise.
	(make_popup_page): Likewise.
	* share/web/stylesheets/qm.css (body.popup): New class.
	* share/dtml/test/show.dtml: Add Delete button.
	* share/dtml/test/suite.dtml: Likewise.

2001-04-29  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (make_help_link_html): Use a.help-link CSS class.
	* qm/test/xmldb.py (Database.__GetSuite): Don't make IDs absolute.
	* qm/test/web/web.py (start_server): Register create-suite and
	new-suite scripts.
	* qm/test/web/suite.py: Improve doc strings.
	(ShowPageInfo.__init__): Fix exclusion of suite's own ID.
	(NewPageInfo): New class.
	(handle_submit): Handle empty ID lists correctly.
	(handle_new): New function.
	(handle_create): Likewise.
	* share/diagnostics/test-help.txt (suite ID): New diagnostic.
	* share/diagnostics/test.txt (suite already exists): Likewise.
	* share/web/stylesheets/qm.css (a.help-link): New class.
	* share/dtml/test/suite.dtml: Adjust.
	* share/dtml/test/new-suite.dtml: New file.

2001-04-27  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (PageInfo.MakeUrl): New method.
	(make_url): New function.
	* qm/test.py: Remove file.
	* qm/test/web/web.py (PageInfo.FormatSuiteId): New method.
	(start_server): Register edit-suite, show-suite, submit-suite
	scripts. 
	* qm/test/web/suite.py: New file.
	* qm/test/web/dir.py (DirPageInfo.FormatItem): Use FormatSuiteId.
	* qm/test/cmdline.py (Command.__ExecuteRun): Process arguments
	here. 
	(Command.__ExecuteEdit): Use "unknown test id" diagnostic.
	(Command.__WriteResults): Use base.dtds.
	* qm/test/xmldb.py (Database.WriteTest): Likewise.
	(Database.WriteAction): Likewise.
	(Database.GetSuite): Use __GetSuite.
	(Database.WriteSuite): New method.
	(Database.GetSuiteIds): Handle implicit parameter.
	(FileSuite): Remove.
	(DirectorySuite): Reimplement.
	(scan_dir_for_suite_dirs): New function.
	* qm/test/base.py (dtds): New variable.
	(InstanceBase.__MakeItem): New method.
	(Test.GetTest): Use it.
	(Action.GetAction): Likewise.
	(Suite): Reimplement.
	(Database.GetSuiteIds): Add implicit parameter.
	(get_all_test_ids): Remove.
	(expand_and_validate_ids): Likewise.

	* share/xml/CATALOG: Add suite DTD.
	* share/xml/suite.dtd: New file.
	* share/dtml/test/suite.dtml: New file.
	* share/diagnostics/test.txt (no id for edit): Generalize.
	(no id for show): Likewise.
	(no id for submit): Likewise.
	(unknown id): Remove.
	(unknown test id): New diagnostic.
	(unknown test or suite id): Likewise.
	* share/diagnostics/test-help.txt (suite suite IDs): New
	diagnostic.
	(suite suite IDs control): Likewise.
	(suite test IDs): Likewise.
	(suite test IDs control): Likewise.

	* tests/unit/common/label_thunk.qmt: Remove test for thunk of
	empty label.
	* tests/common.qms: Convert to XML format.

2001-04-26  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (PageInfo.common_javascript): Add help_window.  Add
	show_help.
	(PageInfo.MakeHelpButton): Remove.
	(PageInfo.MakeHelpLink): New method.
	(PageInfo.MakeHelpLinkHtml): Likewise.
	(make_set_control): Make popup resizable.  Change popup window
	logic.
	(make_help_button): Remove.
	(make_help_link): New function.
	(_help_counter): New variable.
	(make_help_link_html): New function.
	* qm/structured_text.py (HtmlFormatter.__verbatim_regex): Match at
	start of line.
	(HtmlFormatter.__strong_regex): Likewise.
	(HtmlFormatter.__emph_regex): Likewise.
	* qm/fields.py (Field.GetHelp): New method.
	(Field.GetHtmlHelp): Likewise.
	(IntegerField.GetHelp): Likewise.
	(TextField.GetHelp): Likewise.
	(SetField.FormatValueAsHtml): Specify window size.
	(SetField.GetHelp): New method.
	(SetField.GetHtmlHelp): Likewise.
	(AttachmentField.FormatValueAsHtml): Rename button "Change..."
	(AttachmentField.GetHelp): New method.
	(AttachmentField.GetHtmlHelp): Likewise.
	(EnumerationField.GetHelp): Likewise.
	(UidField.__init__): Pass attributes to base.
	* qm/diagnostic.py (DiagnosticSet.program_name): Remove.
	(DiagnosticSet.Generate): Use common.program_name.
	* qm/common.py (program_name): New variable.
	* qm/Makefile.in ($(SCRIPTS)): Use PYTHONBIN.
	* qm/track/config.py (setup_idb_for_test): Adjust syntax.  Add
	descriptions. 
	* qm/track/issue_class.py (IssueClass.__init__): Likewise.
	(IidField.__init__): Pass attributes to base.
	* qm/test/qmtest.in: Set common.program_name.  Load help diagnostics.
	* share/dtml/attachment.dtml: Add help links.
	* share/dtml/test/add-action.dtml: Likewise.
	* share/dtml/test/add-category.dtml: Likewise.
	* share/dtml/test/add-prerequisite.dtml: Likewise.
	* share/dtml/test/new.dtml: Likewise.
	* share/dtml/test/show.dtml: Likewise.
	* share/dtml/track/show.dtml: Likewise.
	* share/diagnostics/common-help.txt: New file.
	* share/web/stylesheets/qm.css (body): Specify font-family.
	(a:link): Don't specify background.
	(a:visited): Likewise.
	(a:active): Likewise.
	(a:hover): Likewise.
	
2001-04-25  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/Makefile.in: Fix typo.

2001-04-25  Alex Samuel  <samuel@codesourcery.com>
	
	* qm/xmlutil.py (write_dom_document): Don't write emacs gunk.
	* qm/web.py (PageInfo.common_javascript): New attribute.
	(PageInfo.FormatStructuredText): New method.
	(PageInfo.GenerateEndBody): Include common JavaScript.
	(PageInfo.MakeButton): New method.
	(PageInfo.MakeUrlButton): Reimplement.
	(PageInfo.MakeHelpButton): New method.
	(WebRequest.GetScriptName): Likewise.
	(make_url_button): Remove.
	(make_button_for_request): New function.
	(make_button_for_url): Likewise.
	(generate_error_page): Likewise.
	(__counter): New variable.
	(make_set_control): New function.
	(encode_set_control_contents): Likewise.
	(decode_set_control_contents): Likewise.
	(make_javascript_string): Likewise.
	(make_help_button): Likewise.
	* qm/label.py (UnmakeRelativeTo.__call__): Handle empty path case.
	(basename): New function.
	(dirname): Likewise.
	* qm/structured_text.py (get_first): Likewise.
	(get_rest): Likewise.
	* qm/fields.py (Field.SetAttributes): New method.
	(IntegerField.ParseFormValue): Catch ValueError.
	(AttachmentField.__init__): Pass attributes to base __init__.
	(TextField.__init__): Call SetAttributes.
	(TextField.FormatValueAsHtml): Replace qm.web with web.
	(SetPopupPageInfo): New class.
	(SetField.FormatValueAsHtml): Reimplement editable case.
	(UploadAttachmentPageInfo): New class.
	(AttachmentField.attachment_summary_prefix): Remove.
	(AttachmentField.FormatValueAsHtml): Capitalize None.
	Reimplement editable case.
	(AttachmentField.GenerateFormValue): Handle null case.
	(AttachmentField.FormatSummary): Adjust.
	(EnumerationField.ParseFormValue): New method.
	(EnumerationField.FormEncodeValue): Likewise.
	(EnumerationField.FormDecodeValue): Likewise.
	(EnumerationField.FormatValueAsHtml): Add a hidden control.
	* qm/diagnostic.py (help_set): New variable.
	(__initialize_module): Load common-help.txt.
	* qm/common.py (convert_from_dos_text): Swap CR LF order.
	(starts_with): New function.
	* qm/attachment.py (upload_url): New constant.
	(temporary_attachment_dir): Likewise.
	(_temporary_location_prefix): Likewise.
	(register_attachment_upload_script): New function.
	(_path_for_temporary_attachment): Likewise.
	(is_temporary_attachment_location): Likewise.
	(_next_temporary_location): New variable.
	(get_temporary_location): New function.
	(store_temporary_attachment): Likewise.
	(retrieve_temporary_attachment): Likewise.
	(handle_attachment_upload): Likewise.

	* qm/track/web/web.py (UploadAttachmentPageInfo): Remove.
	(handle_upload_attachment): Likewise.
	(handle_submit_attachment): Likewise.
	(generate_error_page): Likewise.
	* qm/track/web/show.py (ShowPageInfo.__init__): Rename
	invalid_fields to field_errors.
	(retrieve_attachment_data): New function.
	(handle_submit): Use it.  Handle exceptions better.
	* qm/track/server.py (start_server): Call
	register_attachment_upload_script.  Remove submit-addatchment and
	upload-attachment scripts.

	* qm/test/classes/temporary.py (TempDirectoryAction.fields): Add
	default values.
	(TempDirectoryAction.__init__): Remove default arguments.
	* qm/test/classes/python.py (ExecTest.fields): Use text fields
	instead of attachment fields.
	(ExecTest.__init__): Adjust accordingly.
	(BaseExceptionTest.fields): Use text fields instead of attachment
	fields.
	(BaseExceptionTest.__init__): Adjust accordingly.
	(ExceptionTest.fields): Adjust.
	(ExceptionTest.__init__): Remove default arguments.
	(StringExceptionTest.__init__): Likewise.
	* qm/test/classes/command.py (CommandTest.__init__): Remove
	default arguments.  Handle null interpreter.
	* qm/test/xmldb.py (TestFileError): Derive from RuntimeError.
	(Database.GetTest): Handle DomNodeError.
	(Database.GetTestIds): New method.
	(Database.HasAction): Likewise.
	(Database.WriteAction): Likewise.
	(Database.GetActionIds): Likewise.
	(Database.GetSuiteIds): Likewise.
	(Database.SetAttachmentData): Likewise.
	(Database.__InvalidateItem): Likewise.
	(Database.__MakeDomNodeForTest): Rewrite.
	(Database.__MakeDomNodeForAction): New method.
	(Database.__MakeDomNodeForItem): Likewise.
	(scan_dir_for_labels): New function.
	* qm/test/qmtest.in (print_error_message): Process structued text. 
	* qm/test/cmdline.py (Command.port_option_spec): New attribute.
	(Command.address_option_spec): Likewise.
	(Command.log_file_option_spec): Likewise.
	(Command.commands_spec): Add server command.
	(Command.GetGlobalOption): Add default parameter.
	(Command.GetCommandOption): Likewise.
	(Command.Execute): Set global database.  Don't set __database
	attribute. 
	(Command.GetDatabase): Use get_database.
	(Command.__ExecuteServer): New method.
	(Command.__ExecuteTemplate): Use make_new_test.
	* qm/test/base.py (standard_test_class_names): New variable.
	(standard_action_class_names): Likewise.
	(InstanceBase.__init__): Validate the ID.
	(Test.GetTest): Use default field values.
	(Database.GetTestIds): New method.
	(Database.WriteSuite): Likewise.
	(Database.GetSuiteIds): Likewise.
	(Database.HasAction): Likewise.
	(Database.GetAction): Likewise.
	(Database.WriteAction): Likewise.
	(Database.GetActionIds): Likewise.
	(Database.SetAttachmentData): Likewise.
	(validate_id): New function.
	(get_database): Likewise.
	(get_all_test_ids): Likewise.
	(make_new_test): Likewise.
	(make_new_action): Likewise.
	(_database): New variable.

	* qm/test/web/: New directory.
	* qm/test/web/__init__.py: New file.
	* qm/test/web/dir.py: Likewise.
	* qm/test/web/show.py: Likewise.
	* qm/test/web/web.py: Likewise.

	* tests/unit/common/graph_complete.qmt: Adjust for test class changes.
	* tests/unit/common/graph_cycle.qmt: Likewise.
	* tests/unit/common/graph_pass.qmt: Likewise.
	* tests/unit/common/label_is_valid.qmt: Likewise.
	* tests/unit/common/label_thunk.qmt: Likewise.
	* tests/unit/common/parser_create.qmt: Likewise.
	* tests/unit/common/parser_dup_command_long.qmt: Likewise.
	* tests/unit/common/parser_dup_command_short.qmt: Likewise.
	* tests/unit/common/parser_duplicate_long.qmt: Likewise.
	* tests/unit/common/parser_duplicate_short.qmt: Likewise.
	* tests/unit/common/parser_help.qmt: Likewise.
	* tests/unit/common/parser_no_long.qmt: Likewise.
	* tests/unit/common/parser_parse.qmt: Likewise.
	* tests/unit/common/parser_two_char_short.qmt: Likewise.
	
	* share/web/stylesheets/qm.css (a:link): Underlinke links.
	(a:visited): Likewise.
	(a:active): Likewise.
	(a:hover): Likewise.
	(body.help): New class.
	(a.reverse): Likewise.
	(tr.heading): Likewise.
	* share/dtml/attachment.dtml: New file.
	* share/dtml/error.dtml: Likewise.
	* share/dtml/set.dtml: Likewise.
	* share/dtml/test/add-action.dtml: Likewise.
	* share/dtml/test/add-category.dtml: Likewise.
	* share/dtml/test/add-prerequisite.dtml: Likewise.
	* share/dtml/test/dir.dtml: Likewise.
	* share/dtml/test/new.dtml: Likewise.
	* share/dtml/test/show.dtml: Likewise.
	* share/dtml/track/error.dtml: Remove.
	* share/dtml/track/upload-attachment.dtml: Likewise.
	* share/dtml/track/show.dtml: Adjust.
	* share/diagnostics/common.txt (invalid enum key): New diagnostic.
	(invalid integer field value): Likewise.
	* share/diagnostics/test.txt (action already exists): Likewise.
	(class not found): Likewise.
	(error loading xml test): Likewise.
	(invalid class name): Likewise.
	(invalid test id): Likewise.
	(missing argument): Likewise.
	(no id for show): Likewise.
	(no id for submit): Likewise.
	(no such action): Likewise.
	(no such test): Likewise.
	(invalid id): Remove.

2001-04-23  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/Makefile.in: Add CYGWIN to setup_path.py generation.

	* configure.in (AC_CHECK_FILE): Change exit to a warning.
	* configure: Regenerate.

	* configure.in (AC_CHECK_FILE): Remove Makefile.pre.in.
	* configure: Regenerate.

2001-04-18  Benjamin Chelf  <chelf@codesourcery.com>

	* Makefile.in (setup): Remove generation of extension modules.
	* configure.in (AC_OUTPUT): Add sqmlop/Makefile and
	zope-dtml/ExtensionClass/Makefile.
	* configure: Regenerate.
	* sgmlop/Makefile.in: New file.
	* sgmlop/setup.py: Likewise.
	* zope-dtml/ExtensionClass/Makefile.in: Likewise.
	* zope-dtml/ExtensionClass/setup.py: Likewise.

2001-04-13  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/label.py (thunk): Remove rand. Change to raise exception.

2001-04-09  Alex Samuel  <samuel@codesourcery.com>

	* qm/diagnostic.py (message): New function.
	* qm/__init__.py: Import message from diagnostic.
	* share/diagnostics/test.txt (test did not raise): New diagnostic.
	(test raised non-object): Likewise.
	(test raised non-string): Likewise.
	(test raised wrong argument): Likewise.
	(test raised wrong class): Likewise.
	(test raised wrong string): Likewise.
	(unknown test class): Likewise.
	* qm/test/classes/python.py: New file.
	* qm/test/xmldb.py (UnknownTestClassError): Fix typo.  Derive from
	RuntimeError. 
	(UnknownActionClassError): Likewise.
	(Database.__ParseTestDocument): Handle ImportError.

	* tests/common.qms: New suite.
	* tests/unit/common/graph_complete.qmt: New test.
	* tests/unit/common/graph_cycle.qmt: Likewise.
	* tests/unit/common/graph_pass.qmt: Likewise.
	* tests/unit/common/label_is_valid.qmt: Likewise.
	* tests/unit/common/label_thunk.qmt: Likewise.
	* tests/unit/common/parser_create.qmt: Likewise.
	* tests/unit/common/parser_dup_command_long.qmt: Likewise.
	* tests/unit/common/parser_dup_command_short.qmt: Likewise.
	* tests/unit/common/parser_duplicate_long.qmt: Likewise.
	* tests/unit/common/parser_duplicate_short.qmt: Likewise.
	* tests/unit/common/parser_help.qmt: Likewise.
	* tests/unit/common/parser_no_long.qmt: Likewise.
	* tests/unit/common/parser_parse.qmt: Likewise.
	* tests/unit/common/parser_two_char_short.qmt: Likewise.
	* tests/unit/test/classes/tempdir1.qmt (<class>): Use
	python.ExecTest. 

2001-04-08  Alex Samuel  <samuel@codesourcery.com>

	* doc/manual/: New directory.
	* doc/manual/Makefile.in: New file.
	* doc/manual/main.xml: Likewise.
	* doc/manual/introduciton.xml: Likewise.
	* doc/manual/test-manual.xml: Likewise.
	* doc/manual/test-tour.xml: Likewise.
	
	* qm/test/base.py (Engine.RunTests): Adjust handling of
	action dependencies and context properties.

2001-04-07  Alex Samuel  <samuel@codesourcery.com>

	* qm/test/xmldb.py (action_file_extension): New variable.
	(UnknownActionClassError): New exception class.
	(Database.__init__): Initialize __actions.
	(Database.HasTest): Use __HasItem.
	(Database.HasAction): New method.
	(Database.GetTest): Use __GetItem.
	(Database.GetAction): New method.
	(Database.__HasItem): Likewise.
	(Database.__GetItem): Likewise.
	(Database.__ParseTestDocument): Parse actions.
	(Database.__ParseActionDocument): New method.
	(Database.__GetClassNameFromDomNode): Generalize.
	(Database.__GetArgumentsFromDomNode): Likewise.
	(Database.__GetActionsFromDomNode): New method.
	* qm/test/cmdline.py (Command.__ProgressCallback): Simplify.
	(Command.__ExecuteTemplate): Use get_class.
	(Command.divider): Improve error messages.
	* qm/test/base.py (NoSuchActionError): New class.
	(InstanceBase): Likewise.
	(Test): Derive from InstanceBase. 
	(Test.__init__): Add some parameter defaults.  Add actions
	parameter. 
	(Test.GetClassName): Remove.
	(Test.GetClass): Likewise.
	(Test.GetArguments): Likewise.
	(Test.GetId): Likewise.
	(Test.GetActions): New method.
	(Test.Run): Set working directory.
	(Action): New class.
	(Result.GetOutcome): New method.
	(ResultWrapper.GetContextProperties): Likewise.
	(Context): Don't validate values.
	(Context.__ValidateKey): Rename to...
	(Context.ValidateKey): ... this.
	(Context.__ValidateValue): Remove.
	(ContextWrapper): New class.
	(Engine.RunTests): Reorganize.  Add actions.  Add context property
	handling code. 
	(make_result_for_exception): Add outcome parameter.
	(get_test_class): Generalize to...
	(get_class): ... this.
	(__loaded_test_classes): Generalize to...
	(__loaded_classes): ... this.
	(__builtin_test_class_path): Generalize to...
	(__builtin_class_path): ... this.
	* qm/test/classes/temporary.py: New file. 
	* qm/test/classes/python.py: Likewise.

	* share/diagnostics/test.txt (context attribute cannot be deleted): 
	New diagnostic.
	* share/xml/CATALOG (fields.mod): New entry.
	* share/xml/fields.mod: New DTD module.
	* share/xml/issue.dtd: Use shared fields module.
	* share/xml/test.dtd: Likewise.
	* share/xml/action.dtd: New file.
	
	* tests/unit/test/classes/tempdir1.qmt: New file.
	* tests/unit/test/classes/tempdir1.qma: Likewise.

2001-04-03  Alex Samuel  <samuel@codesourcery.com>

	* README: Update.
	* qm/test/qmtest.in: Fix import.
	* share/tutorial/: New directory.
	* share/tutorial/test/: Likewise.
	* share/tutorial/test/tdb/: Likewise.
	* share/tutorial/test/count.py: New file.
	* share/tutorial/test/tdb/test1.qmt: Likewise.
	* share/tutorial/test/tdb/test2.qmt: Likewise.
	
2001-03-30  Alex Samuel  <samuel@codesourcery.com>

	* install.py: Fix order.

2001-03-30  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk.in (INSTALLDOCDIR): New variable.
	* qm.spec (files): Include doc files.
	* install.py (doc_files): New variable.
	Take doc dir as argument.  Install documentation.
	* README: Improve formatting.  Describe new track features, and
	add test tutorial.
	* Makefile.in (install): Pass doc directory to install script.
	* share/diagnostics/test.txt (missing test id): New diagnostic.
	(test class not fully specified): Likewise.
	* qm/test/cmdline.py (Command.__ExecuteRun): Handle ValueError.
	(Command.__ExecuteTemplate): Likewise.
	(Command.divider): Generate an indication if no tests failed, or
	if no tests produced unexpected outcomes.
	* qm/test/base.py (get_test_class): Fix typo.

2001-03-30  Alex Samuel  <samuel@codesourcery.com>

	* qm.spec (BuildRoot): Reove.

2001-03-30  Alex Samuel  <samuel@codesourcery.com>

	* qm/setup_path.py.in (add_to_python_path): Use __lib_dir.
	(__base_dir): Remove.
	(__lib_dir): New variable.
	(__share_dir): Likewise.
	Set different environment variables.
	* qm/fields.py (EnumerationField.__init__): Adjust call to base
	initializer.  Set default.
	(TimeField.__init__): Likewise.
	* qm/common.py (get_base_directory): Remove.
	(get_lib_directory): New function.
	(get_share_directory): Likewise.
	* qm/Makefile.in (setup_path.py): Adjust substitutions.
	* qm/track/config.py (initialize_idb): Get user db template from
	new location.
	* qm/track/cmdline.py (Command.__PerformInitialize): Print a
	message. 
	* qm/test/base.py (__builtin_test_class_path): Use
	get_lib_directory in initializer.

2001-03-30  Alex Samuel  <samuel@codesourcery.com>

	* Makefile.in (install): New target.
	* configure.in (AC_PROG_INSTALL): Use it.
	* configure: Regenerate.
	* install.py: New file.
	* qm.spec: Likewise.
	* standard.mk.in (INSTALL): New variable.
	(prefix): Likewise.
	(exec_prefix): Likewise.
	(INSTALLBINDIR): Likewise.
	(INSTALLLIBDIR): Likewise.
	(INSTALLSHAREDIR): Likewise.
	* sgmlop/sgmllib.py: Strip CR.
	* sgmlop/xmllib.py: Likewise.
	* xmlrpc/xmlrpc_handler.py: Likewise.
	* xmlrpm/xmlrpclib.py: Likewise.
	* share/diagnostics/track.txt (new idb message): New diagnostic.
	* qm/users.xml.tempalte: Move to...
	* share/xml/users.xml.template: ... here.

2001-03-28  Alex Samuel  <samuel@codesourcery.com>

	* qm/xmlutil.py (write_dom_document): Write emacs configury.
	(__hyphen_regex): New variable.
	(__hyphen_replacement): New function.
	(sanitize_text_for_comment): Likewise.
	* qm/structured_text.py (to_text): Add width and indent
	parameters.
	* qm/label.py (MakeRelativeTo.__init__): Remove label parameter.
	(UnmakeRelativeTo): New class.
	* qm/common.py (is_executable): New function.
	* qm/attachment.py (make_dom_node): Handle 'None' attachments.
	(from_dom_node): Likewise.
	* qm/fields.py (AttachmentField.MakeDomNodeForValue): Likewise.
	
	* share/xml/test.dtd (attachment): Allow empty element.
	* share/diagnostics/test.txt (invalid class): New diagnostic.
	(mising arg for template): Likewise.
	(no id for edit): Likewise.
	(test already exists): Likewise.
	(unknown id): Likewise.

	* qm/test/xmldb.py (Database.WriteTest): New method.
	(Database.TestIdToPath): New method.
	(Database.__GetClass): Rename to...
	(Database.__GetClassNameFromDomNode): ... this.
	(Database.__GetArguments): Rename to...
	(Database.__GetArgumentsFromDomNode): ... this.
	(Database.__GetPrerequisites): Rename to...
	(Database.__GetPrerequisitesFromDomNode): ... this.
	(Database.__MakeDomNodeForTest): New method.
	(FileSuite.__init__): Adjust for MakeRelativeTo.
	(DirectorySuite.__AddTestsInDirectory): Likewise.
	* qm/test/cmdline.py (Command.commands_spec): Add edit and
	template commands.
	(Command.Execute): Dispatch edit and template.
	(Command.__ExecuteEdit): New method.
	(Command.__EditTest): Likewise.
	(Command.__ExecuteTemplate): Likewise.
	(Command.divider): Print cause on ERROR outcome.
	* qm/test/base.py (Test.__init__): Take test class name as
	parameter. 
	(Test.GetClassName): New method.
	(Test.GetClass): Adjust.
	(Test.GetArguments): New method.
	(Test.GetCategories): Likewise.
	(Database.WriteTest): Likewise.
	(ResultWrapper.MakeDomElement): Rename to...
	(ResultWrapper.MakeDomNode): ... this.
	* qm/test/classes/command.py (ExecTest.__init__): Make stdin
	default to None.
	(ExecTest.Run): Initialize result_pipe_file.  Handle null
	attachment for stdin, stdout, stderr.  Fix pipe cleanup.
	(ExecTest.RunProgram): Check executable.  Catch access error.
	(CommandTest.__init__): Make stdin default to None.
	(CommandTest.RunProgram): Check interpreter executable.
	(ScriptTest.__init__): Make stdin default to None.

2001-03-27  Alex Samuel  <samuel@codesourcery.com>

	* qm/fields.py (Field.__init__): Make attributes parameter a
	catch-all for named arguments.
	(IntegerField.__init__): Add attributes parameter.
	(TextField.__init__): Likewise.
	(AttachmentField.__init__): Likewise.
	(EnumerationField.__init__): Likewise.
	(TimeField.__init__): Likewise.
	* qm/common.py (format_exception): Use format_traceback.
	(format_traceback): New function.
	(decode_data_from_text): Add none encoding.
	(open_temporary_file_fd): New function.
	(open_temporary_file): Likewise.
	(find_program_in_path): Likewise.
	* qm/attachment.py (from_dom_node): Make description, mimetype,
	filename elements optional.
	* share/xml/test.dtd (attachment): Make subelements optional.
	(data): New element.
	* share/diagnostics/common.txt (dom wrong tag for field): Fix.
	(temp file error): New diagnostic.
	* share/diagnostics/test.txt (invalid context assignment): Likewise.
	(invalid environment assignment): Likewise.
	(xml invalid arg name): Fix.
	(xml not int value): Likewise.
	* qm/test/base.py (Context.__ValidateKey): Raise ValueError.
	(Engine.RunTests): Use make_result_for_exception.
	(make_result_for_exception): New function.
	* qm/test/cmdline.py (Command.context_option_spec): New attribute.
	(Command.commads_spec): Add it to the run command.
	(Command.MakeContext): New method.
	(Command.__ExecuteRun): Use it.
	* qm/test/classes/command.py: New file.

2001-03-26  Alex Samuel  <samuel@codesourcery.com>

	Reorganize data files into share directory.

	* qm/xmlutil.py (make_system_id): Adjust.
	(load_xml_file): Use get_share_directory.
	* qm/web.py (PageInfo.html_stylesheet): New attribute.
	(PageInfo.html_generator): Likewise.
	Rename _login_url request field to _redirect_url throughout.
	(PageInfo.default_class): Set it.
	(WebRequestHandler.__HandleScriptRequest): Catch NoSessionError
	and InvalidSessionError.
	(WebServer.HandleNoSessionError): New method.
	(WebRequest.GetSession): Raise NoSessionError.
	(Session.Validate): Raise InvalidSessionError.
	(get_session): Likewise.
	(handle_logout): New function.
	(generate_html_from_dtml): Likewise.
	(generate_login_form): Likewise.
	* qm/diagnostic.py (DiagnosticSet.ReadFromFile): Change path
	parameter. 
	(__initialize_module): New function.  Call it.
	* qm/diagnostics.txt: Remove.
	* qm/common.py (get_base_directory): Add components parameter.
	(get_share_directory): New function.
	* qm/track/web/web.py (PageInfo.html_stylesheet): Remove.
	(__initialize_module): New function.  Call it.
	(generate_html_from_dtml): Use generioc generate_html_from_path.
	* qm/track/web/index.py (IndexPageInfo.MakeLogoutForm): Set
	_redirect_url. 
	* qm/track/server.py (start_server): Use get_share_directory.
	Register logout.  
	* qm/track/config.py (__initialize_module): New function.  Call
	it. 
	* qm/test/qmtest.in: Use get_share_directory.

	* qm/dtds/CATALOG: Remove.
	* qm/dtds/issue.dtd: Likewise.
	* qm/dtds/result.dtd: Likewise.
	* qm/dtds/test.dtd: Likewise.
	* qm/dtds/user.dtd: Likewise.
	* qm/test/diagnostics.txt: Likewise.
	* qm/track/diagnostics.txt: Likewise.
	* qm/track/web/images/clear.gif: Likewise.
	* qm/track/web/images/sc-logo.png: Likewise.
	* qm/track/web/stylesheets/qmtrack.css: Likewise.
	* qm/track/web/templates/error.dtml: Likewise.
	* qm/track/web/templates/history.dtml: Likewise.
	* qm/track/web/templates/index.dtml: Likewise.
	* qm/track/web/templates/query.dtml: Likewise.
	* qm/track/web/templates/show.dtml: Likewise.
	* qm/track/web/templates/summary.dtml: Likewise.
	* qm/track/web/templates/upload-attachment.dtml: Likewise.
	* qm/dtds/: Remove directory.
	* qm/track/web/images/: Likewise.
	* qm/track/web/templates/: Likewise.
	
	* share/: New directory.
	* share/diagnostics/: Likewise.
	* share/dtml/: Likewise.
	* share/dtml/track/: Likewise.
	* share/web/: Likewise.
	* share/web/images/: Likewise.
	* share/web/stylesheets/: Likewise.
	* share/xml/: Likewise.
	* share/diagnostics/common.txt: New file.
	* share/diagnostics/test.txt: Likewise.
	* share/diagnostics/track.txt: Likewise.
	* share/dtml/login_form.dtml: Likewise.
	* share/dtml/track/error.dtml: Likewise.
	* share/dtml/track/history.dtml: Likewise.
	* share/dtml/track/index.dtml: Likewise.
	* share/dtml/track/query.dtml: Likewise.
	* share/dtml/track/show.dtml: Likewise.
	* share/dtml/track/summary.dtml: Likewise.
	* share/dtml/track/upload-attachment.dtml: Likewise.
	* share/web/images/clear.gif: Likewise.
	* share/web/images/sc-logo.png: Likewise.
	* share/web/stylesheets/qm.css: Likewise.
	* share/xml/CATALOG: Likewise.
	* share/xml/issue.dtd: Likewise.
	* share/xml/result.dtd: Likewise.
	* share/xml/test.dtd: Likewise.
	* share/xml/user.dtd: Likewise.
	
2001-03-25  Alex Samuel  <samuel@codesourcery.com>

	* qm/test/base.py (load_results): Use load_xml_file.

2001-03-25  Alex Samuel  <samuel@codesourcery.com>

	* qm/xmlutil.py (ParseError): New class.
	(make_system_id): New function.
	(load_xml_file): Likewise.
	(get_dom_text): Handle empty text.
	(create_dom_document): Generate system ID from DTD file name.
	* qm/web.py (session_id_field): New variable.
	(NoSessionError): New class.
	(InvalidSessionError): Likewise.
	(PageInfo.MakeLoginForm): New method.
	(PageInfo.FormatUserId): Likewise.
	(WebRequestHandler.do_GET): Store client IP address in request.
	(WebRequestHandler.do_POST): Likewise.
	(WebRequestHandler.__HandleScriptRequest): Set no-cache header.
	(WebRequestHandler.__HandleFileRequest): Set public caching.
	(WebServer.Bind): Set SO_REUSEADDR.
	(WebRequest.__init__): Add base parameter.
	(WebRequest.SetSessionId): New method.
	(WebRequest.GetSessionId): Likewise.
	(WebRequest.GetSession): Likewise.
	(WebRequest.get): Likewise.
	(WebRequest.copy): Add url, fields parameters.
	(Session): New class.
	(get_session): New function.
	(__clean_up_expired_sessions): Likewise.
	(handle_login): Likewise.
	(sessions): New variable.
	* qm/user.py: New file.
	* qm/users.xml.template: Likewise.
	* qm/diagnostics.txt (bad port number): New diagnostic.
	(xml parse error): Likewise.

	* qm/dtds: New directory.
	* qm/dtds/CATALOG: New file.
	* qm/dtds/issue.dtd: Likewise.
	* qm/dtds/reslt.dtd: Likewise.
	* qm/dtds/test.dtd: Likewise.
	* qm/dtds/user.dtd: Likewise.

	* qm/track/server.py (start_server): Handle index and login pages.
	* qm/track/issue.py (issues_to_xml): Use public ID and DTD file
	name.
	* qm/track/diagnostics.txt (xml parse error): Remove.
	* qm/track/config.py (open_idb): Load user database.
	(initialize_idb): Create user database from template.
	* qm/track/cmdline.py (Command.__PerformServer): Handle bad port
	numbers.
	* qm/track/issue.dtd: Remove.
	* qm/track/web/web.py (PageInfo.GenerateStartBody): Adjust title
	bar. 
	(UploadAttachmentPageInfo.MakeSubmitUrl): Copy request.
	* qm/track/web/summary.py (SummaryPageInfo.MakeIssueUrl): Copy
	request. 
	* qm/track/web/query.py (QueryPageInfo.MakeQueryForm): Likewise.
	* qm/track/web/show.py (ShowPageInfo.MakeSubmitUrl): Likewise.
	(handle_submit): Likewise. Set the user field.
	* qm/track/web/index.py (IndexPageInfo.MakeNewForm): Copy request.
	(IndexPageInfo.MakeShowForm): Likewise.
	(IndexPageInfo.MakeEditForm): Likewise.
	(IndexPageInfo.MakeShowAllForm): Likewise.
	(IndexPageInfo.MakeQueryForm): Likewise.
	(IndexPageInfo.MakeQueryUrl): Likewise.
	(IndexPageInfo.MakeShutdownForm): Likewise.
	(IndexPageInfo.MakeLogoutForm): New method.
	* qm/track/web/templates/index.dtml: Reformat.  Add login controls.
	* qm/track/web/stylesheets/qmtrack.css: Adjust formatting.
	(span.userid): New style.

	* qm/test/xmldb.py (Database.GetTest): Use load_xml_file.
	* qm/test/cmdline.py (Command.__WriteResults): Use public ID and
	DTD file name.
	* qm/test/results.dtd: Remove.
	* qm/test/test.dtd: Likewise.
	
2001-03-22  Alex Samuel  <samuel@codesourcery.com>

	* qm/xmlutil.py (create_dom_text_element): New function.
	(__dom_implementation): New variable.
	(create_dom_document): New function.
	(write_dom_document): Likewise.
	* qm/web.py (WebRequestHandler.do_GET): Ignore exceptions during
	shutdown. 
	(WebRequestHandler.do_POST): Likewise.
	(WebRequestHandler.__HandleScriptRequest): Ignore IO errors during
	write. 
	* qm/fields.py (Attachment): Remove.
	Use attachment.Attachment throughout.
	Replace qm.track.error with qm.error throughout.
	(Field.__repr__): New method.
	(Field.MakeDomNodeForValue): Likewise.
	(IntegerField.MakeDomNodeForValue): Likewise.
	(TextField.MakeDomNodeForValue): Likewise.
	(SetField.MakeDomNodeForValue): Likewise.
	(AttachmentField.MakeDomNodeForValue): Likewise.
	(EnumerationField.MakeDomNodeForValue): Likewise.
	* qm/common.py (encode_data_as_text): New function.
	(decode_data_from_text): Likewise.
	* qm/attachment.py: New file.

	* qm/track/sql_idb.py (SqlIdb.AddIssue): Check IID uniqueness.
	(SqlIdb.__ColumnSpecForField): Add fourth attachment column.
	(SqlIdb.__GetColumnName): Likewise.
	(SqlIdb.__BuildSqlForFieldValue): Likewise.
	(SqlIdb.__GetFieldFromRow): Likewise.
	* qm/track/issue.py (IssueFileError): New class.
	(Attachment): Likewise.
	(Issue.__repr__): New method.
	(Issue.MakeDomElement): Likewise.
	(get_differing_fields): Ignore revision number and timestamp.
	(load_issues_from_xml_file): New function.
	(__issues_from_dom): Likewise.
	(__issue_from_dom): Likewise.
	(issues_to_xml): Likewise.
	Initialize qm.attachment.attachment_class.
	* qm/track/issue.dtd: New file.
	* qm/track/idb.py (IdbBase.Query): Ignore attachment fields.
	* qm/track/diagnostics.txt (missing import files): New diagnostic.
	(xml file unknown class): Likewise.
	(xml file unknown field): Likewise.
	(xml parse error): Likewise.
	(format error): Add output format specifier. 
	* qm/track/cmdline.py (Command.output_option): New attribute.
	(Command.qmtrack_commands): Use it for several commands.  Add
	import command.
	(Command.__init__): Dispatch import command.
	(Command.Execute): Handle output option.
	(Command.__PerformQuery): Query all issue classes.
	(Command.__PerformImport): New method.
	(Command.__PrintResults): Adjust comments.  Implement XML format.
	* qm/track/web/web.py (make_url_for_attachment): Use attachment
	attributes. 
	
	* qm/test/test.dtd: Adjust for attachment schema.
	* qm/test/cmdline.py (Command.__WriteResults): Use
	create_dom_document and write_dom_document.
	* qm/test/base.py (Attachment): New class.
	Initialize qm.attachment.attachment_class.

2001-03-20  Alex Samuel  <samuel@codesourcery.com>

	* qm/xmlutil.py: New file.
	* qm/fields.py: Use it throughout.
	* qm/common.py (OrderedMap.__len__): New method.
	(get_dom_node_text): Remove.
	(get_child_dom_node_text): Likewise.
	(get_dom_children_texts): Likewise.
	* qm/cmdline.py (CommandParser.__init__): Add conflicting_options
	parameter.
	(CommandParser.ParseCommandLine): Check for conflicting options.
	* qm/diagnostics.txt (conflicting options): New diagnostic.

	* qm/test/xmldb.py: Use qm.xmlutil throughout.
	* qm/test/cmdline.py (Command.all_results_option_spec): Remove.
	(Command.verbose_option_spec): New attribute.
	(Command.output_option_spec): Likewise.
	(Command.no_output_option_spec): Likewise.
	(Command.summary_option_spec): Likewise.
	(Command.no_summary_option_spec): Likewise.
	(Command.outcomes_option_spec): Likewise.
	(Command.conflicting_option_specs): Likewise.
	(Command.commands_spec): Add options.
	(Command.__init__): Use conflicting_option_specs.
	(Command.Execute): Handle verbose option.
	(Command.__ExecuteRun): Handle summary, output, and outcome
	options.
	(Command.__ProgressCallback): New method.
	(Command.__WriteSummary): Likewise.
	(Command.__WriteResults): Rewrite.
	* qm/test/base.py (Result.__init__): Remove context parameter.
	(Result.__getitem__): Remove.
	(Result.get): Likewise.
	(ResultWrapper): New class.
	(Engine.RunTests): Add progress_callback parameter.  Wrap results
	in ResultWrapper.
	(load_outcomes): New function.
	(load_results): Likewise.
	(__results_from_dom): Likewise.
	(__result_from_dom): Likewise.
	* qm/test/diagnostics.txt (class is not test class): Remove.
	* qm/test/results.dtd: New file.
	* qm/test/test.dtd: Add comments.

2001-03-20  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/track/sql_idb.py (SqlIdb.GetIssues): import types. 
	(SqlIdb.GetIssue): Change type IssueClass to
	qm.track.issue_class.IssueClass to fix bug.
	(SqlIdb.GetAllRevisions): Likewise.

2001-03-18  Alex Samuel  <samuel@codesourcery.com>

	* qm/graph.py: Fix code formatting.
	* qm/common.py (OrderedMap): New class.
	* qm/test/cmdline.py (Command.all_results_option_spec): New
	variable.
	(Command.commands_spec): Include it.
	(Command.__init__): Initialize __show_all_results.
	(Command.Execute): Handle all-results option.
	(Command.__ExecuteRun): Show all results if specified.
	* qm/test/base.py (Test.__init__): Add parameters.
	(Test.GetTest): New method.
	(Test.GetClass): Likewise.
	(Test.AddCategory): Remove.
	(Test.GetPrerequisites): New method.
	(Test.Run): Use GetTest.
	(Result.outcomes): New variable.
	(Result.__str__): Reimplement.
	(Result.get): New method.
	(PrerequisiteMapAdapter): New class.
	(Engine.RunTests): Handle prerequisites.
	* qm/test/xmldb.py (Database.__DOES_NOT_EXIST): New constant.
	(Database.__NOT_LOADED): Likewise.
	(Database.__init__): Initialize test and suite caches.
	(Database.HasTest): Use caches.
	(Database.GetTest): Likewise.
	(Database.HasSuite): Likewise.
	(Database.GetSuite): Likewise.
	(Database.__ParseTestDocument): Parse prerequisites.  Pass info to
	Test initializer.
	(Database.__GetArguments): Treat fields as list.
	(Database.__GetPrerequisites): Get outcome attribute.
	* qm/test/test.dtd (prerequisite): Add attlist.
	* qm/test/diagnostics.txt (invalid result): New diagnostic.

2001-03-17  Alex Samuel  <samuel@codesourcery.com>

	* qm/common.py (__label_regex): Remove.
	(__Label_regex_with_dot): Likewise.
	(is_valid_label): Likewise.
	(__label_thunk_regex): Likewise.
	(thunk_to_label): Likewise.
	(get_dom_children_texts): New function.
	* qm/label.py: New file.
	* qm/fields.py: Use qm.label.
	* qm/test.py: Likewise.
	* qm/test/xmldb.py: Use qm.label.
	(Database.GetTest): Fix typo.
	(Database.__ParseTestDocument): Rename parameter.  Read categories
	and prerequisites.
	(Database.__GetPrerequisites): New method.
	(FileSuite.__init__): Improve path handling.
	(DirectorySuite.__init__): Likewise.
	(DirectorySuite.__AddTestsInDirectory): Likewise.
	Don't load diagnostics.  Don't load RC.
	* qm/test/qmtest.in (print_error_message): Remove self parameter.
	Initialize qmtest diagnostics.  Load RC.  Fix error message.
	* qm/test/base.py: Use qm.label.
	(Test.IsInCategory): New method.
	(Test.AddCategory): Likewise.
	* qm/track/issue_class.py: Use qm.label.

2001-03-16  Alex Samuel  <samuel@codesourcery.com>

	* qm/Makefile.in (SCRIPTS): New variable.
	(all): Remove track/qmtrack.  Add $(SCRIPTS).
	(track/qmtrack): Generalize to...
	(%: %.in): ... this rule.
	* qm/test/cmdline.py (Command.__WriteOutcomes): Wrap apply
	argument in a tuple.

2001-03-16  Alex Samuel  <samuel@codesourcery.com>

	* README: Update requirements.
	* qm/__init__.py: Import error and warning.
	* qm/diagnostic.py: Add doc string.  Improve comments.
	(DiagnosticSet.__init__): Don't take program name.  Don't load.
	(DiagnosticSet.ReadFile): Rename to...
	(DiagnosticSet.ReadFromFile): ... this.
	(DiagnosticSet.Generate): Rewrite.
	(error): New function.
	(warning): Likewise.
	(diagnostic_set): New variable.
	Initialize generic diagnostics.
	* qm/diagnostics.txt: New file.
	* qm/setup_path.py.in: Put base directory in environment.
	* qm/common.py (base_directory): Remove.
	(get_base_directory): Get from environment.
	(RcConfiguration): New class.
	(__label_regex_with_dot): New variable.
	(is_valid_label): Add allow_periods parameter.
	(get_host_name): Improve comments.
	(format_byte_count): Use constants.
	(get_dom_node_text): New function.
	(get_child_dom_node_text): Likewise.
	(load_module): Likewise.
	(load_class): Likewise.
	(split_path_fully): Likewise.
	(rc): New variable.
	* qm/cmdline.py (CommandParser.GetBasicHelp): Adjust output.
	(CommandParser.GetCommandHelp): Likewise,
	* qm/fields.py (DomNodeError): New class.
	(Field.GetTypeDescription): New method.
	(Field.GetValueFromDomNode): Likewise.
	(IntegerField.GetTypeDescription): Likewise.
	(IntegerField.GetValueFromDomNode): Likewise.
	(TextField.GetTypeDescription): Likewise.
	(TextField.GetValueFromDomNode): Likwise.
	(SetField.GetTypeDescription): Likewise.
	(SetField.GetValueFromDomNode): Likewise.
	(AttachmentField.GetTypeDescription): Likewise.
	(AttachmentField.GetValueFromDomNode): Likewise.
	(EnumerationField.GetTypeDescription): Likewise.
	(EnumerationField.GetValueFromDomNode): Likewise.a
	(TimeField.GetTypeDescription): Likewise.
	(UidField.GetTypeDescription): Likewise.

	* qm/track/__init__.py: Import error and warning.
	* qm/track/qmtrack.in: Use diagnostic "missing idb".
	* qm/track/issue_class.py (IidField.GetTypeDescription): New method.
	* qm/track/idb.py (get_field_type_description_for_query): Remove.
	* qm/track/diagnostics.txt (command error): Remove.
	(missing idb): New diagnostic.
	* qm/track/config.py (__diagnostics): Remove.
	(diagnostic): Likewise.
	(error): Likewise.
	(warning): Likewise.
	Load diagnostics.
	* qm/track/cmdline.py (Command.command): Remove.
	(Command.Execute): Use "missing command" diagnostic.

	* qm/track/web/query.py (QueryPageInfo.GetFieldTypeDescription):
	Use GetTypeDescription method. 
	* qm/track/web/templates/summary.dtml: Show groupings only if
	there is more than one issue class.  Improve formatting.
	* qm/track/web/stylesheets/qmtrack.css (th.issue_class): Set
	background-color to grey.

	* qm/test: New directory.
	* qm/test/__init__.py: New file.
	* qm/test/base.py: Likewise.
	* qm/test/cmdline.py: Likewise.
	* qm/test/diagnostics.txt: Likewise.
	* qm/test/qmtest.in: Likewise.
	* qm/test/test.dtd: Likewise.
	* qm/test/xmldb.py: Likewise.
	* qm/test/classes: New directory.
	* qm/test/classes/__init__.py: New file.

2001-03-14  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (PrivilegedPortError): New class.
	(WebServer.Bind): Handle EACCES.
	* qm/track/server.py (start_server): Handle PrivilegedPortError.
	* qm/track/diagnostics.txt (privileged port): New diagnostic.

2001-03-14  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/config.py (diagnostic): Generate path to diagnostics
	file. 

2001-03-14  Alex Samuel  <samuel@codesourcery.com>

	* qm/fields.py (EnumerationField.FormatValueAsHtml): Fix name and
	value defaults.
	* qm/track/config.py (setup_idb_for_internal_use): Don't generate
	issues. 

2001-03-14  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/web/templates/index.dtml: Fix typo.

2001-03-14  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (WebServer.__init__): Add address parameter.
	(WebServer.Bind): Use __address.
	* qm/track/server.py (start_server): Add address parameter.
	* qm/track/cmdline.py (Command.address_option): New variable.
	(Command.qmtrack_commands): Use it.
	(Command.__PerformServer): Handle address option.
	
2001-03-14  Alex Samuel  <samuel@codesourcery.com>

	* qm/structured_text.py (TextFormatter.__init__): Set default
	width to 78.  Initialize __depth.
	(TextFormatter.StartList): Don't indent outermost paragraphs.
	(TextFormatter.EndList): Likewise.
	(to_text): Fix comment.
	* qm/cmdline.py (CommandParser.GetOptionsHelp): Adjust output.
	(CommandParser.GetCommandHelp): Treat command description as
	structured text. 

	* qm/track/issue_class.py (IssueClass.__init__): Add title and
	description. 
	(IssueClass.GetTitle): New method.
	(IssueClass.GetDescription): Likewise.
	* qm/track/idb.py (IdbBase.Query): Don't handle multiple issue
	classes here.
	* qm/track/sql_idb.py (SqlIdb.Query): Likewise.
	(SqlIdb.__AddResults): Remove.
	* qm/track/config.py (setup_idb_for_internal_use): New function.
	(setup_idb_for_test): Set class title.
	* qm/track/cmdline.py (Command): Update option descriptions.
	(Command.internal_option): New variable.
	(Command.qmtrack_commands): Use it.
	(Command.__PerformInitialize): Handle internal option.

	* qm/track/web/summary.py (SummaryPageInfo.__init__): Partition
	issues by class.  Handle reverse sort.
	(SummaryPageInfo.MakeResortUrl): Indicate reverse sort where
	appropriate. 
	(handle_summary): Loop over issue classes when querying.
	* qm/track/web/index.py (IndexPageInfo.__init__): Extract issue
	classes for IDB. 
	* qm/track/web/stylesheets/qmtrack.css (th.issue_class): New
	style. 
	* qm/track/web/templates/summary.dtml: Show issues grouped by
	class. 
	* qm/track/web/templates/show.dtml: Print class for new issue.
	* qm/track/web/templates/index.dtml: Show select for issue class
	for new issue.

2001-03-13  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (WebRequestHandler.do_GET): Flush and shut down
	socket.
	* qm/fields.py: New file.

	* qm/track/issue.py: Likewise.
	(Attachment): Remove.
	* qm/track/diagnostics.txt (field exist): Don't use class as a
	parameter name. 
	* qm/track/cmdline.py (Command.__CheckFieldTypes): Don't use class
	as a parameter name.  Use qm.field.

	* qm/track/web/web.py: Use qm.field.
	(form_field_prefix): Remove.
	(attachment_description_prefix): Likewise.
	(attachment_mime_type_prefix): Likewise.
	(attachment_location_prefix): Likewise.
	(attachment_file_name_prefix): Likewise.
	(make_form_field_value): Likewise.
	(format_field_value): Likewise.
	(format_int_field_value): Likewise.
	(format_text_field_value): Likewise.
	(format_set_field_value): Likewise.
	(format_enum_field_value): Likewise.
	(format_attachment_field_value): Likewise.
	(make_url_for_attachment): Add field argument.  Insert into
	AttachmentField. 
	* qm/track/web/show.py (handle_submit): Use qm.field.
	(ShowPageInfo.FormatFieldValue): Handle read_only and
	initialize_only attributes.
	(validate_mime_type): Remove.
	(extract_attachment_field_value): Likewise.
	(decode_set_field_value): Likewise.
	(handle_submit): Simplify, using qm.field.
	* qm/track/sql_idb.py: Use qm.field.
	* qm/track/test.py: Likewise.
	* qm/track/config.py (setup_idb_for_test): Likewise.
	* qm/track/idb.py: Likewise.
	* qm/track/issue_class.py (IssueField): Remove.
	(IssueFieldInteger): Likewise.
	(IssueFieldText): Likewise.
	(IssueFieldSet): Likewise.
	(IssueFieldAttachment): Likewise.
	(IssueFieldEnumeration): Likewise.
	(IssueFieldTime): Likewise.
	(IssueFieldUid).
	(IssueClass.__init__): Use qm.field.
	* qm/track/web/templates/upload-attachment.dtml: Use new
	attachment encoding.

2001-03-13  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/test.py (test_graph_cycle): Define.
	(test_graph_complete): Likewise.
	(test_graph_pass): Likewise.
	(regression_tests): Add the above.
	* qm/graph.py: New file.

2001-03-09  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/track/diagnostics.txt: Add new error messages.
	* qm/track/cmdline.py: Fixed formatting for raising errors.

2001-03-05  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/web/show.py (handle_submit): Format error messages.
	* qm/track/server.py (start_server): Handle address in use errors.
	(execute): Issue diagnostics.
	* qm/track/issue_class.py: Use diagnostics throughout.
	(IssueFieldText.Validate): Convert from DOS text.
	* qm/track/diagnostics.txt: New file.
	* qm/track/config.py (__diagnostics): New variable.
	(diagnostic): New function.
	(error): Likewise.
	(warning): Likewise.
	* qm/track/cmdline.py (Command.__PerformDestroy): Handle lock error.

	* qm/web.py (AddressInUseError): New class.
	(WebServer.Bind): Raise it.
	(escape): Reimplement.
	(__entity_regex): New variable.
	(__replacement_for_entity): New function.
	(unescape): New function.
	(format_structured_text): Reimplement.
	* qm/diagnostic.py: New file.
	* qm/structured_text.py: Likewise.
	* qm/common.py (FileSystemMutex.GetPath): New method.
	(MapReplacer): New class.
	(replace_by_map): New function.
	(convert_from_dos_text): Likewise.

2001-03-01  Alex Samuel  <samuel@codesourcery.com>

	* README: Adjust tutorial.
	* qm/track/web/web.py (PageInfo.GenerateStartBody): Adjust
	navigation bar. 
	* qm/track/config.py (setup_idb_for_test): Ajust titles.
	* qm/track/issue_class.py (IssueClass.__init__): Likewise.
	* qm/track/cmdline.py (Command.__PrintResults): Add full format
	style.

2001-03-01  Alex Samuel  <samuel@codesourcery.com>

	* README: Update.
	* qm/web.py (WebRequestHandler.__HandleScriptRequest): Handle
	SystemExit. 
	(WebServer.__init__): Initialize __shutdown_requested.
	(WebServer.Run): Run until shutdown request.
	(WebServer.RequestShutdown): New method.
	* qm/common.py (remove_directory_recursively): New function.
	* qm/track/web/templates/show.dtml: Use field title.
	* qm/track/web/templates/index.dtml: Adjust.  Add shutdown.
	* qm/track/web/images/sc-logo.png: New file.
	* qm/track/web/web.py (PageInfo.GenerateStartBody): Adjust title
	bar. 
	* qm/track/web/index.py (IndexPageInfo.MakeShutdownForm): New
	method. 
	* qm/track/issue_class.py (default_categories): Adjust.
	(IssueField.GetTitle): New method.
	(IssueField.GetDescription): Likewise.
	(IssueFieldSet.__init__): Use attributes from contained field.
	(IssueClass.__init__): Adjust mandatory fields.
	* qm/track/config.py (get_idb_lock): New function.
	(open_idb): Use it.
	(setup_idb_for_test): Adjust test values.
	* qm/track/cmdline.py: Adjust command descriptions.  Add destroy
	command. 
	(Command.__init__): Register destroy.
	(Command.__PerformDestroy): New method.

2001-02-28  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/track/sql_idb.py (Query): Define.
	(__AddResults): Likewise.
	(__ConvertToSQL): Likewise.
	(__AstToSQL): Likewise.
	(__AstToSQLHelper): Likewise.
	(__CheckTautology): Likewise.
	
2001-02-28  Alex Samuel  <samuel@codesourcery.com>

	Support attachments in the web UI.
	
	* qm/web.py (WebRequestHandler.__HandleScriptRequest): Handle
	results that aren't HTML.
	* qm/common.py (format_byte_count): New function.

	* qm/track/sql_idb.py (SqlIdb.__init__): Pass arguments to base
	class. 
	(SqlIdb.Close): New method.
	* qm/track/server.py (start_server): Add upload-attachment,
	submit-attachment, and download-attachment handlers.
	* qm/track/memory_idb.py (MemoryIdb.__init__): Pass arguments to
	base initializer.  Don't create directory.
	(MemoryIdb.Close): Call base-class Close.
	* qm/track/issue.py (Attachment.__init__): Add parameter defaults.
	(Attachment.__cmp__): New method.
	* qm/track/idb.py (IdbBase.__init__): Take more arugments.  Create
	the directory.  Set up attachments.
	(IdbBase.Close): New method.
	(IdbBase.GetNewAttachmentLocation): Likewise.
	(IdbBase.SetAttachmentData): Likewise.
	(IdbBase.GetAttachmentData): Likewise.
	(IdbBase.GetAttachmentSize): Likewise.
	(IdbBase.__GetAttachmentPath): Likewise.
	(get_field_type_description_for_query): Describe attachments.
	* qm/track/gadfly_idb.py (GadflyIdb.__init__): Pass arguments to
	base initializer.  Don't create directory.
	(GadflyIdb.Close): Call base-class Close.
	* qm/track/config.py (setup_idb_for_test): Add attachments field.
	* qm/track/cmdline.py (Command.__PerformInitialize): Fix exception.

	* qm/track/web/show.py (validate_mime_type): New function.
	(extract_attachment_field_value): Likewise.
	(decode_set_field_value): Likewise.
	(handle_submit): Process attachments and sets using above.  Don't
	add an identical revision.
	* qm/track/web/web.py (UploadAttachmentPageInfo): New class.
	(attachment_description_prefix): New variable.
	(attachment_mime_type_prefix): Likewise.
	(attachment_location_prefix): Likewise.
	(attachment_file_name_prefix): Likewise.
	(format_field_value): Handle attachments.
	(format_int_field_value): Handle form_encoded style.
	(format_text_field_value): Likewise.
	(format_set_field_value): Likewise.  Format brief and full
	differently.  Fill option values with form-encoded elements.
	Generate add function differently for different contained field
	types. 
	(format_enum_field_value): Handle form_encoded style.
	(format_attachment_field_value): New function.
	(handle_upload_attachment): Likewise.
	(handle_submit_attachment): Likewise.
	(handle_download_attachment): Likewise.
	(make_url_for_attachment): Likewise.
	* qm/track/web/templates/upload-attachment.dtml: New file.

2001-02-27  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/server.py (start_server): Bind the server.
	* qm/web.py (HTTPServer): New class.
	(WebServer): Derive from HTTPServer.
	(WebServer.GetXmlRpcUrl): Use GetServerAddress.
	(WebServer.Run): Don't bind here.
	(WebServer.Bind): New function.
	(WebServer.GetServerAddress): New method.

2001-02-27  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/track/cmdline.py (__Parse): Change formatting to happen from
	command options.

2001-02-27  Alex Samuel  <samuel@codesourcery.com>

	* qm/common.py (get_host_name): Add fallback logic.

2001-02-26  Alex Samuel  <samuel@codesourcery.com>

	* README: Clarify --test-values flag.

	* qm/track/server.py (execute): Rearrange exception handling.
	* qm/track/issue_class.py (IssueFieldIid.SetDefaultValue): New method.
	* qm/track/config.py (initialize_idb): Check that the IDB path
	doesn't exist.
	
2001-02-25  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (make_url_button): New function.
	(PageInfo.MakeUrlButton): Call it.
	* qm/cmdline.py (CommandParser.BuildGetoptString): Don't add
	argument indicator if there's no short form.

	* qm/track/issue_class.py (default_categories): Add some bogus
	test values.
	(IssueField.Validate): Raise ValueError instead.
	(IssueFieldText): Add nonempty attribute.
	(IssueFieldText.Validate): Do validation.
	(IssueFieldAttachment.Validate): Raise ValueError.
	(IssueFieldEnumeration.__init__): Likewise.  Validate better.
	(IssueFieldIid.__init__): New method.
	(IssueFieldIid.Validate): Likewise.
	(IssueFieldUid.__init__): Likewise.
	(IssueClass.__init__): Make iid an IssueFieldIid.  Make summary
	nonempty.
	* qm/track/issue.py (Issue.__init__): Don't validate.
	(Issue.SetField): Likewise.
	(Issue.Validate): New function.
	(Issue.AssertValid): Likewise.
	(Issue.IsDeleted): Likewise.
	* qm/track/idb.py (get_field_type_description_for_query): Place
	enumerals in double quotes.
	* qm/track/config.py (setup_idb_for_test): Add problem_reports
	field. 
	* qm/track/memory_idb.py (MemoryIdb.AddIssue): Check issue
	validity.
	(MemoryIdb.AddRevision): Likewise.
	* qm/track/sql_idb.py (SqlIdb.AddIssue): Likewise.
	(SqlIdb.AddRevision): Likewise.

	* qm/track/web/web.py (format_field_value): Add name argument.
	(format_int_field_value): Likewise.
	(format_text_field_value): Likewise.  Adjust formatting.
	(format_set_field_value): Implement.
	(format_enum_field_value): Add name argument.  Change option
	values. 
	* qm/track/web/summary.py (SummaryPageInfo.IsIssueShown): Always
	return 1. 
	(handle_summary): Filter out deleted issues.
	* qm/track/web/show.py (ShowPageInfo.__init__): Add field_errors
	argument. 
	(handle_show): Make sure iid is specified.
	(handle_submit): Add is_new.  Issue error on revision
	incoherency.  Handle encoded set fields.  Validate submission and
	generate resubmission pages.
	* qm/track/web/stylesheets/qmtrack.css: Adjust.
	* qm/track/web/templates/show.dtml: Adjust formatting.  Use more
	styles.  Support field error messages.
	* qm/track/web/templates/query.dtml: Adjust table formatting.

2001-02-22  Alex Samuel  <samuel@codesourcery.com>

	* templates/dtml: Adjust.
	* qm/web.py (make_form_for_request): New function.
	* qm/track/sql_idb.py: Fix imports.
	(SqlIdb.__FilterCurrentRows): New function.
	(SqlIdb.GetIssues): Use it.
	* qm/track/issue_class.py: Fix imports.
	* qm/track/server.py (start_server): Add index and query pages.
	* qm/track/idb.py (IdbBase.Query): Use repr instead of quoting
	strings. 
	(get_field_type_description_for_query): New function.
	* qm/track/config.py (get_name): New function.
	(get_default_class): Likewise.
	* qm/track/web/web.py (PageInfo.GenerateStartBody): Add stuff to
	nav bar.
	(PageInfo.GetName): New method.
	(generate_error_page): New function.
	* qm/track/web/summary.py (SummaryPageInfo.__init__): Accept
	issues as argument.
	(handle_summary): Handle query arguments.
	* qm/track/web/show.py (handle_show): Use generate_error_page.
	* qm/track/web/index.py: New file.
	* qm/track/web/query.py: Likewise.
	* qm/track/web/templates/error.dtml: New file.
	* qm/track/web/templates/index.dtml: Likewise.
	* qm/track/web/templates/query.dtml: Likewise.

2001-02-21  Alex Samuel  <samuel@codesourcery.com>

	* qm/web.py (PageInfo.MakeUrlButton): New method.
	(PageInfo.MakeImageUrl): Likewise.
	(PageInfo.MakeSpacer): Likewise.
	(PageInfo.MakeRule): Likewise.

	* qm/track/sql_idb.py (SqlIdb.__BuildSqlForFieldValue): Call
	escape_for_sql. 
	(SqlIdb.__GetFieldFromRow): Call unescape_for_sql.
	(escape_for_sql): New function.
	(unescape_for_sql): Likewise.
	* qm/track/server.py (start_server): Register image path.
	(execute): Pass through KeyboardInterrupt.
	* qm/track/qmtrack.in: Handle KeyboardInterrupt.
	* qm/track/issue_class.py (IssueField.ValuesAreEqual): New method.
	* qm/track/issue.py (get_differing_fields): New function.
	* qm/track/gadfly_idb.py (GadflyCursor.execute): Flush log file.

	* qm/track/web/web.py (HistoryPageInfo): New class.
	(format_text_field_value): Fix brief output of multiline text.
	* qm/track/web/summary.py (SummaryPageInfo.__init__): Use
	GetIssues.
	* qm/track/web/show.py (ShowPageInfo.IsShowField): Show revision
	if it's not current.
	(ShowPageInfo.FormatFieldValue): Generate revision specially.
	(ShowPageInfo.MakeEditUrl): Adjust url.
	(ShowPageInfo.MakeHistoryUrl): Likewise.
	(ShowPageInfo.MakeShowRevisionUrl): New method.
	(ShowPageInfo.FormatHistory): Likewise.
	(handle_show): Set up extra stuff for history or past revisions.
	(handle_new): Fix typo.
	* qm/track/web/templates/show.dtml: Adjust formatting for history.
	* qm/track/web/templates/history.dtml: New file.

	* qm/track/web/images: New directory.
	* qm/track/web/images/clear.gif: New file.

2001-02-20  Alex Samuel  <samuel@codesourcery.com>

	* qm/common.py (UserError): New class.
	(get_host_name): Use gethostbyname_ex.
	* qm/cmdline.py (CommandError): Derive from UserError.

	* qm/track/sql_idb.py (SqlIdb.GetIssues): New method.
	(SqlIdb.Query): Remove.
	(SqlIdb.GetIssue): Allow none where clause.
	* qm/track/server.py (execute): Catch UserError instead of
	RuntimeError.
	* qm/track/memory_idb.py (MemoryIdb.AddIssueClass): Raise KeyError
	on duplicate.
	(MemoryIdb.GetIssues): Support retrieval of all issues in a single
	class.
	* qm/track/gadfly_idb.py (GadflyIdb.__init__): Don't lock.
	(GadflyIdb.__del__): Rename to...
	(GadflyIdb.Close): ... this.  Don't unlock.
	* qm/track/config.py (open_idb): Fix typo in exception code.

2001-02-20  Alex Samuel  <samuel@codesourcery.com>

	* templates/py: Set emacs fill-column.
	
	* Makefile.in (SUBDIRS): Remove doc.  Add sgmlop.
	(setup): Add sgmlop/Makefile.
	(sgmlop/Makefile): New rule.
	* README: Add third-party software list.
	* standard.mk.in (all): Remove doc.
	
	* qm/web.py (WebRequestHandler.__ProcessRequest): Rename to...
	(WebRequestHandler.__HandleRequest): ... this.
	(WebRequestHandler.__HandleScriptRequest): New method.
	(WebRequestHandler.__HandleXmlRpcRequest): Likewise.
	(WebRequestHandler.__HandleFileRequest): Likewise.
	(WebServer.__init__): Initialize XML-RPC.  Set port and log file here. 
	(WebServer.GetXmlRpcUrl): New method.
	(WebServer.IsXmlRpcUrl): Likewise.
	(WebServer.Run): Don't set port and log file here.
	* qm/setup_path.py.in: Add sgmlop and xmlrpc to path.
	* qm/common.py (format_exception): New function.

	* qm/track/qmtrack.in (script_name): Remove.  Set state variable
	instead.
	(exit_code): New variable.
	Handle exceptions differently.
	* qm/track/server.py (do_command_for_xml_rpc): New function.
	(start_server): Enable XML-RPC.  Write XML-RPC URL to URL file.
	(execute): Handle error messages and exit code.  Implement remote
	mode. Handle exceptions.
	* qm/track/config.py (open_idb): Set server_url state in remote mode.
	(close_idb): Clean up correspondingly.
	* qm/track/cmdline.py (Command.GetArgumentList): New function.
	* qm/track/web/summary.py (SummaryPageInfo.IsShowIssue): Rename to...
	(SummaryPageInfo.IsIssueShown): ... this.
	* qm/track/web/templates/summary.dtml: Adjust accordingly

2001-02-18  Alex Samuel  <samuel@codesourcery.com>

	* README: Add more instructions.
	* qm/common.py (label_regex): Rename to...
	(__label_regex): ... this.
	(label_thunk_regex): Rename to...
	(__label_thunk_regex): ... this.
	(__host_name): New variable.
	(get_host_name): New function.
	* qm/track/config.py (open): Rename to...
	(open_idb): ... this.  Catch only IOError.
	(close): Rename to...
	(close_idb): ... this.
	(initialize): Rename to...
	(initialize_idb): ... this.
	* qm/track/cmdline.py: Adjust accordingly.
	* qm/track/qmtrack.in: Likewise.
	* qm/track/server.py (start_server): Write URL file.
	(execute): Fix typo.

2001-02-18  Alex Samuel  <samuel@codesourcery.com>

	* Makefile.in (SUBDIRS): Add qm.
	(README): Update.
	* configure.in (AC_OUTPUT): Add qm/Makefile.
	* configure: Regenerate.	
	* standard.mk.in (PYTHONBIN): New macro.
	(PYTHON): Use it.

	* qm/Makefile.in: New file.
	* qm/command_line.py: Rename to...
	* qm/cmdline.py: ... this, with heavy modifications.
	* qm/common.py (FileSystemMutex.MutexLockError): Remove.
	(FileSystemMutex.Lock): Make sure parnet directory exists.
	(FileSystemMutex.IsLocked): New method.
	(Configuration): New class.
	(base_directory): New variable.
	(get_base_directory): New function.
	* qm/setup_path.py.in: New file.
	* qm/web.py: Likewise.

	* qm/track/qmtrack.in: New file.
	* qm/track/__init__.py: Update imports.
	* qm/track/qmtrack.py: Rename to...
	* qm/track/cmdline.py: ... this, with heavy modifications.
	* qm/track/config.py: New file.
	* qm/track/idb.py: Clean up imports and comments.
	(IdbBase.PerformQuery): Rename to...
	(IdbBase.Query): ... this.  Adjust.
	(get_ib_class): New function.
	* qm/track/issue.py (Issue.__init__): Don't object to missing
	field values. 
	(Issue.StampTime): New method.
	(IssueSortPredicate): New class.
	* qm/track/issue_class.py (IssueField.__init__): Initialize more
	attributes. 
	(IssueField.IsAttribute): New method.
	(IssueFieldText): Rename multiline attribute to structured.
	(IssueFieldEnumeration.Validate): Try int conversion.
	(IssueFieldEnumeration.GetEnumerals): New method.
	(IssueFieldEnumeration.ValueToName): Likewise.
	(IssueClass.__init__): Adjust mandatory fields.
	(IssueClass): Redefine __fields attribute and add
	__fields_by_name.  Use throughout.
	* qm/track/memory_idb.py (MemoryIdb.__init__): Don't lock.
	(MemoryIdb.__del__): Rename to...
	(MemoryIdb.Close): ... this.
	(MemoryIdb.AddIssue): Stamp time.
	(MemoryIdb.AddRevision): Likewise.
	(MemoryIdb.GetIids): New method.
	(MemoryIdb.GetIssues): Return copies of current revisions only.
	(MemoryIdb.GetAllRevisions): Return copies.
	(MemoryIdb.Query): Remove.
	* qm/track/server.py: New file.
	* qm/track/sql_idb.py (SqlIdb.AddIssue): Stamp time.
	(SqlIdb.AddRevision): Likewise.

	* qm/track/web: New directory.
	* qm/track/web/__init__.py: New file.
	* qm/track/web/show.py: Likewise.
	* qm/track/web/summary.py: Likewise.
	* qm/track/web/web.py: Likewise.
	* qm/track/web/stylesheets: New directory.
	* qm/track/web/stylesheets/qmtrack.css: New file.
	* qm/track/web/templates: New directory.
	* qm/track/web/templates/show.dtml: New file.
	* qm/track/web/templates/summary.dtml: Likewise.

	* templates/dtml: New file.
	
2001-02-16  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/command_line.py: Fix formatting issue.
	* qm/track/qmtrack.py: Likewise. Fix bug to catch exception when
	Validate fails on a SetField.

2001-02-16  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/command_line.py: Fix coding standards issues.
	* qm/track/idb.py (IdbBase::PerformQuery): Define.
	* qm/track/qmtrack.py: Fix split up strings to use 'printf' syntax.
	(CommandLine::PerformQuery): Move code into idb.py. Only do UI stuff.
	
2001-02-15  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/track/qmtrack.py: Fix coding standards issues.
	* qm/track/issue_class.py: Likewise.
	* qm/track/memory_idb.py: Likewise.

	* qm/command_line.py (CommandParser::ParseCommandLine): Fix
	to use 'write' instead of print. Add code to check for command
	existence.
	
2001-02-14  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/track/issue_class.py (IssueFieldEnumeration::GetEnumeration): 
	Define.
	(IssueClass::__init__): Make 'iid' have no default value.

	* qm/track/memory_idb.py (MemoryIdb::GetIssues): Define.

	* qm/track/qmtrack.py (CommandLine::__init__): Initialize 
	results.
	(CommandLine::ParseFieldValuePairs): Handle no '=' in string.
	(CommandLine::OpenDatabase): Change warning to error.
	(CommandLine::PerformCreate): Fix bugs and do type checking on
	fields. Do mandatory fields correctly.
	(CommandLine::CheckFieldTypes): Define.
	(CommandLine::PerformEdit): Fix bugs and do type checking on
	fields.
	(CommandLine::PerformQuery): Define.
	
2001-02-12  Benjamin Chelf  <chelf@codesourcery.com>

        * qm/track/qmtrack.py (__main__): Change to catch exception.
	* qm/command_line.py (ErrorHandler): Change to raise exception.
	
	* qm/track/qmtrack.py (PrintResults): Change from 'print' to
	write.

2001-02-11  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/command_line.py (ErrorHandler): New method.
	(__init): Add output parameter.
	(ParseCommandLine): Fix bugs.
	
	* qm/track/qmtrack.py: New file.

2001-02-08  Alex Samuel  <samuel@codesourcery.com>

	Module zope-dtml is now part of this module.  Add configury to set
	up and use it.
	
	* configure.in (/usr/lib/python1.5/config/Makefile.pre.in): Check file.
	* configure: Regenerate.
	* Makefile.in (SUBDIRS): Add zope-dtml/ExtensionClass.
	(setup): Add zope-dtml/ExtensionClass/Makefile.
	(zope-dtml/ExtensionClass/Makefile): New rule.
	* standard.mk.in (PYTHON): Build PYTHONPATH.
	(PYTHONDIRS): New variable.

2001-01-09  Benjamin Chelf  <chelf@codesourcery.com>

	* qm/command_line.py: New file.

	* qm/test.py (test_parser_create): Define.
	(test_paresr_parse): Likewise.
	(test_parser_help): Likewise.
	(test_parser_duplicate_long): Likewise.
	(test_parser_duplicate_short): Likewise.
	(test_parser_two_char_short): Likewise.
	(test_parser_no_long): Likewise.
	(test_parser_dup_command_short): Likewise.
	(test_parser_dup_command_long): Likewise.
	(regession_tests): Add above tests.

2001-01-09  Alex Samuel  <samuel@codesourcery.com>

	* Makefile.in (PYTHONDOCDIRS): New variable.
	* standard.mk.in (doc-python): Build for PYTHONDOCDIRS only.

2001-01-09  Alex Samuel  <samuel@codesourcery.com>

	* README.sources: Clarify naming conventions.
	* templates/py: Add section banners.
	
	* configure.in: New file.
	* install-sh: Likewise.
	* configure: Likewise.
	* standard.mk.in: New file.
	* standard.mk: Remove.
	* Makefile.in: New file.
	* Makefile: Remove.
	* doc/Makefile.in: New file.
	* doc/Makefile: Remove.
	* doc/design/qmconfig/Makefile.in: New file.
	* doc/design/qmconfig/Makefile: Remove.
	* doc/design/qmtest/Makefile.in: New file.
	* doc/design/qmtest/Makefile: Remove.
	* doc/design/qmtrack/Makefile.in: New file.
	* doc/design/qmtrack/Makefile: Remove.
	
2001-01-09  Alex Samuel  <samuel@codesourcery.com>

	* README: New file.

2001-01-08  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk (BUILDDIR): New macro.
	(DOCDIR): Likewise.
	(HAPPYDOC): Likewise.
	(doc): Depend on doc-python.
	(doc-python): New rule.

2001-01-07  Alex Samuel  <samuel@codesourcery.com>

	* qm/track/__init__.py: Import idb.
	* qm/track/idb.py: New file.
	* qm/track/sql_idb.py (SqlIdb): Drive from IdbBase.
	(SqlIdb.__init__): Initialize base class.
	(SqlIdb.AddIssue): Process triggers.  Return result code.
	(SqlIdb.AddRevision): Likewise.
	(SqlIdb.GetIssue): Process triggers.
	(SqlIdb.GetAllRevisions): Likewise.
	(SqlIdb.RegisterTrigger): Remove.
	(SqlIdb.UnregisterTrigger): Likewise.
	(SqlIdb.GetTriggers): Likewise.
	(SqlIdb.__InsertIssue): New method.
	* qm/track/gadfly_idb.py (GadflyIdb.__init__): Initialize base class.
	* qm/track/memory_idb.py (MemoryIdb): Derive from IdbBase.
	(MemoryIdb.__init__): Initialize base class.
	(MemoryIdb.AddIssue): Process triggers.  Return result code.
	(MemoryIdb.AddRevision): Likewise.
	(MemoryIdb.GetIssue): Process triggers.
	(MemoryIdb.GetAllRevisions): Likewise.
	(MemoryIdb.RegisterTrigger): Remove.
	(MemoryIdb.UnregisterTrigger): Likewise.
	(MemoryIdb.GetTriggers): Likewise.
	(MemoryIdb.__InsertIssue): New method.
	* qm/track/test.py (TestPreupdateTrigger): New class.
	(test_preupdate_trigger): New test.
	(TestGetTrigger): New class.
	(test_get_trigger): New test.
	(TestPostupdateTrigger): New class.
	(test_postupdate_trigger): New test.
	(regression_tests): Add new tests.
	Run memory IDB tests first.

2001-01-04  Alex Samuel  <samuel@codesourcery.com>

	* qm/common.py (MutexLockError): New class.
	(FileSystemMutex): Likewise.
	* qm/regression_test.py (run_regression_test_driver): Don't exit.
	* qm/test.py: New file.
	
	* qm/track/issue.py (Issue.__init__): Adjust for changes in
	IssueClass. 
	(Issue.Copy): New function.
	(Attachment): New class.
	* qm/track/issue_class.py (default_categories): New variable.
	(default_states): Likewise.
	(IssueField.__init__): Handle default values differently.
	(IssueField.GetDefaultValue): Likewise.
	(IssueField.SetDefaultValue): New function.
	(IssueField.UnsetDefaultValue): Likewise.
	(IssueField.HasDefaultValue): Likewise.
	(IssueFieldInteger.__init__): Set default value.
	(IssueFieldText.__init__): Likewise.
	(IssueFieldSet.__init__): Likewise.
	(IssueFieldAttachment.__init__): Likewise.
	(IssueFieldEnumeration.__init__): Likewise.
	(IssueFieldTime.__init__): Likewise.
	(IssueFieldUid.__init__): Likewise.
	(IssueClass.__init__): Create mandatory fields.
	(IssueClass.GetFields): Store fields as a map.
	(IssueClass.HasField): New function.
	* qm/track/gadfly_idb.py: New file.
	* qm/track/sql_idb.py: Likewise.
	* qm/track/memory_idb.py: Likewise.
	* qm/track/test.py: Adjust for new field initializers throughout.
	(test_create_idb): New test.
	(test_add_issue_class): Likewise.
	(test_add_issues): Likewise.
	(test_get_issues): Likewise.
	(test_attachments): Likewise.
	
2001-01-04  Alex Samuel  <samuel@codesourcery.com>

	* gadfly/__init__.py: New file.

	* templates/Makefile: Update year.
	* templates/docbook: Likewise.
	* templates/docbook-chapter: Likewise.
	* templates/html: Likewise.
	* templates/py: Likewise.
	* templates/xml: Likewise.

2000-12-22  Alex Samuel  <samuel@codesourcery.com>

	* gadfly/.cvsignore: New file.
	
2000-12-28  R. Lindsay Todd  <toddr@rpi.edu>

	* doc/design/qmconfig/design-td.xml: Added new sections and
	details.
	
	* doc/design/qmconfig/design-lm.xml: Break into sections.
	* doc/design/qmconfig/design-probe.xml: Likewise.
	* doc/design/qmconfig/design-td.xml: Likewise.

2000-12-27  R. Lindsay Todd  <toddr@rpi.edu>

	* doc/design/qmconfig/biblio.xml: Add an id.

	* doc/design/qmconfig/design-pdd.xml: New file.
	* doc/design/qmconfig/design-basic.xml: New file.

	* doc/design/qmconfig/figures/pkg_qmconfig.*: Re-scale.
	* doc/design/qmconfig/design.xml: Add format="PNG" to imagedata's.
	* doc/design/qmconfig/design-lm.xml: Likewise.
	* doc/design/qmconfig/design-probe.xml: Likewise.
	* doc/design/qmconfig/design-td.xml: Likewise.
	* doc/design/qmconfig/requirements.xml: Likewise.

2000-12-26  R. Lindsay Todd  <toddr@rpi.edu>
	
	* standard.mk: Run pdfjadetex thrice, to get all references correct.

	* doc/design/qmconfig/design-probe.xml: Updated API for probe
	class, to be consistent with other components.
	* doc/design/qmconfig/figures/cl_probe.*: Updated to match API for
	probe class.

	* doc/design/qmconfig/design-lm.xml: Add figure for LangServ.
	* doc/design/qmconfig/figures/cl_langserv.*: New file.

2000-12-22  Alex Samuel  <samuel@codesourcery.com>

	* Makefile (setup): New target.
	(gadfly/sqlwhere.py): Likewise.
	* standard.mk (setup): New phony target.
	
2000-12-22  Alex Samuel  <samuel@codesourcery.com>

	* Makefile: New file.

2000-12-21  Alex Samuel  <samuel@codesourcery.com>

	* qm/.cvsignore: New file.
	* qm/track/.cvsignore: Likewise.
	
2000-12-21  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk (PRINTTEX): Define as dummy if there's no DocBook.
	(PRINTPDF): Likewise.
	(test): New target.

	* qm/__init__.py: New file.
	* qm/common.py: Likewise.
	* qm/regression_test.py: Likewise.
	* qm/track/__init__.py: Likewise.
	* qm/track/issue.py: Likewise.
	* qm/track/issue_class.py: Likewise.
	* qm/track/test.py: Likewise.
	
2000-12-15  R. Lindsay Todd  <toddr@rpi.edu>

	* doc/design/qmconfig/design.xml: Reorder some sections.
	* doc/design/qmconfig/design-lm.xml: Add additional ids.
	* doc/design/qmconfig/design-td.xml: Likewise.
	* doc/design/qmconfig/design-probe.xml: Likewise.  Added rough
	draft of probe database.

2000-12-15  R. Lindsay Todd  <toddr@rpi.edu>

	* doc/design/qmconfig/overview.xml: Remove /> sequences, so as to
	not confuse psgml.
	* doc/design/qmconfig/design-lm.xml: Likewise.
	* doc/design/qmconfig/requirements.xml: Likewise.
	* doc/design/qmconfig/design.xml: Likewise.
	* doc/design/qmconfig/design-td.xml: Likewise.

2000-12-15  R. Lindsay Todd  <toddr@rpi.edu>

	* doc/design/qmconfig/design.xml: Add/fix id's.
	* doc/design/qmconfig/intro.xml: Likewise.
	* doc/design/qmconfig/overview.xml: Likewise.
	* doc/design/qmconfig/requirements.xml: Likewise.
	* doc/design/qmconfig/design-td.xml: Likewise.  Fix images.
	* doc/design/qmconfig/qmconfig.xml: Add qm.mod.

2000-12-14  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk ($(PRINTDIR)/$(PRINTPDF)): Return true even if empty
	$(DOCBITMAPS).

2000-12-14  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk ($(PRINTDIR)/$(PRINTPDF)): Handle empty $(DOCBITMAPS).

2000-12-14  Alex Samuel  <samuel@codesourcery.com>

	* README.sources: Update ChangeLog and documentation instructions. 

2000-12-13  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk ($(PRINTDIR)/$(PRINTPDF)): Copy bitmaps into print
	dir instead of setting paths. 
	* doc/design/qmconfig/design-probe.xml: Scale images.
	* doc/design/qmconfig/design-td.xml: Likewise.
	* doc/design/qmconfig/design.xml: Likewise.
	* doc/design/qmconfig/requirements.xml: Likewise.

2000-12-13  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk ($(HTMLMANIFEST)): Put graphics filename in manifest
	only.
	* doc/design/qmconfig/design-probe.xml: Adjust image filenames.
	* doc/design/qmconfig/design-td.xml: Likewise.
	* doc/design/qmconfig/design.xml: Likewise.
	* doc/design/qmconfig/requirements.xml: Likewise.

2000-12-13  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk ($(PRINTDIR)/$(PRINTPDF)): Set TEXINPUTS.
	* doc/design/qmconfig/Makefile (DOCBITMAPS): Set it.
	* doc/design/qmtext/iface.xml: Always require qmtest subcommand.

2000-12-13  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtest/iface.xml: Twiddle command-line syntax.

	* doc/design/qmtest/core.xml: Regularize entity ids.
	* doc/design/qmtest/impl.xml: Likewise.
	* doc/design/qmtest/qmtest.xml: Likewise.
	* doc/design/qmtest/req.xml: Likewise.

2000-12-07  Alex Samuel  <samuel@codesourcery.com>

	* doc/qm.mod (gui): New entity.
	(url): Likewise.
	* doc/design/qmtrack/concepts.xml: Fix typos.
	* doc/design/qmtrack/implementation.xml: Likewise.
	* doc/design/qmtrack/introduction.xml: Likewise.
	* doc/design/qmtrack/requirements.xml: Likewise.
	* doc/design/qmtrack/triggers.xml: Likewise.
	* doc/design/qmtrack/user-interface.xml: Likewise.
	* doc/design/qmtrack/xml-repr.xml: Likewise.
	
2000-12-07  Alex Samuel  <samuel@codesourcery.com>

	Tag "version-0-2" for delivery to LANL.
	
	* standard.mk ($(HTMLINDEX)): Process graphics here.
	($(HTMLMANIFEST)): Remove separate target.
	
	* doc/qm-html.dsl (%generate-legalnotice-link%): Define true.
	* doc/qm-print.dsl (%chapter-autolabel%): Likewise.
	(%section-autolabel%): Likewise.
	* doc/qm-opl.xml: New file.
	* doc/qm.mod (qmbuild): Use <application> element.
	(qmconfig): Likewise.
	(qmtest): Likewise.
	(qmtrack): Likewise.
	(html): New entity.
	(mime): Likewise.
	(dashdash): Likewise.
	(qmlicense): Likewise.

	* doc/design/qmtest/core.xml: Edit for style, spelling,
	consistency, and markup.
	* doc/design/qmtest/iface.xml: Likewise.
	* doc/design/qmtest/impl.xml: Likewise.
	* doc/design/qmtest/qmtest.xml: Likewise.
	* doc/design/qmtest/refs.xml: Likewise.
	* doc/design/qmtest/req.xml: Likewise.
	
	* doc/design/qmtrack/concepts.xml: Likewise.
	* doc/design/qmtrack/implementation.xml: Likewise.
	* doc/design/qmtrack/introduction.xml: Likewise.
	* doc/design/qmtrack/qmtrack.xml: Likewise.
	* doc/design/qmtrack/requirements.xml: Likewise.
	* doc/design/qmtrack/triggers.xml: Likewise.
	* doc/design/qmtrack/user-interface.xml: Likewise.
	* doc/design/qmtrack/xml-repr.xml: Likewise.
	
2000-12-06  Alex Samuel  <samuel@codesourcery.com>

	* doc/qm.mod (idb): Remove entity.
	(iid): Likewise.
	(faq): New entity.
	
	* doc/design/qmtest/refs.xml: Strip linefeeds.

	* doc/design/qmtrack/qmtrack.xml (idb): New entity.
	(iid): Likewise.
	(uid): Likewise.
	* doc/design/qmtrack/concepts.xml: Edit.
	* doc/design/qmtrack/implementation.xml: Likewise.
	* doc/design/qmtrack/triggers.xml: Likewise.
	* doc/design/qmtrack/user-interface.xml: Likewise.
	* doc/design/qmtrack/xml-repr.xml: Likewise.
	* doc/design/qmtrack/introduction.xml: Incorporate new text.
	* doc/design/qmtrack/requirements.xml: Likewise.
	* doc/design/qmtrack/references.xml: New file.
	* doc/design/qmtrack/state-model-example.dia: Likewise.
	* doc/design/qmtrack/state-model-example.png: Likewise.
	
2000-12-06  Benjamin Chelf  <chelf@codesourcery.com>

	* doc/design/qmtrack/create1.html: New file.
	* doc/design/qmtrack/create2.html: Likewise.
	* doc/design/qmtrack/edit1.html: Likewise.
	* doc/design/qmtrack/edit2.html: Likewise.
	* doc/design/qmtrack/query1.html: Likewise.
	* doc/design/qmtrack/query2.html: Likewise.
	* doc/design/qmtrack/main1.html: Likewise.

	* doc/design/qmtrack/create1.jpg: Update.
	* doc/design/qmtrack/create2.jpg: Likewise.
	* doc/design/qmtrack/edit1.jpg: Likewise.
	* doc/design/qmtrack/edit2.jpg: Likewise.
	* doc/design/qmtrack/query1.jpg: Likewise.
	* doc/design/qmtrack/query2.jpg: Likewise.
	* doc/design/qmtrack/query3.jpg: Likewise.
        * doc/design/qmtrack/main1.jpg: New file.

	* doc/design/user-interface.xml: Update e-mail section by adding
	headers. Flesh out web section.
	
2000-12-05  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/qmtrack.xml (idb-impl.xml): Remove entity.
	* doc/design/qmtrack/idb-impl.xml: Remove.
	* doc/design/qmtrack/implementation.xml: Describe SQL IDB.
	* doc/design/qmtrack/xml-repr.xml: Tune.
	
2000-12-05  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/user-interface.xml: Tidy up formatting.

2000-12-05  Benjamin Chelf  <chelf@codesourcery.com>

	* doc/design/qmtrack/user-interface.xml: Fix inconsistencies with
	other sections.
	* doc/design/qmtrack/create1.jpg: Update.
	* doc/design/qmtrack/edit1.jpg: Likewise.
	* doc/design/qmtrack/edit2.jpg: Likewise.
	* doc/design/qmtrack/query1.jpg: Likewise.
	* doc/design/qmtrack/query2.jpg: Likewise.
	* doc/design/qmtrack/query3.jpg: Likewise.

2000-12-05  R. Lindsay Todd  <toddr@rpi.edu>

	* doc/design/qmconfig/design-td.xml: New file

2000-12-05  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/Makefile (DOCBITMAPS): Add *.png.
	* doc/design/qmtrack/web-gui-states.dia: New file.
	* doc/design/qmtrack/web-gui-states.png: Likewise.
	* doc/design/qmtrack/concepts.xml: Add categories section.
	* doc/design/qmtrack/idb-impl.xml: Edit.
	* doc/design/qmtrack/triggers.xml: Explain get triggers better.
	* doc/design/qmtrack/user-interface.xml: Expand.
	
2000-12-04  Alex Samuel  <samuel@codesourcery.com>

	* doc/qm.mod: New file.
	* doc/design/qmtest/qmtest.xml: Don't declare phrase entities.
	Incorporate qm.mod.
	* doc/design/qmtrack/qmtrack.xml: Likewise.
	* doc/design/qmtrack/introduction.xml: Add link.
	* doc/design/qmtrack/user-interface.xml: Fix entity.  Fix ulink.
	* doc/design/qmtrack/xml-repr.xml: Improve example.

2000-12-04  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/concepts.xml: Edit.  Add ids.
	* doc/design/qmtrack/idb-impl.xml: Likewise.
	* doc/design/qmtrack/implementation.xml: Likewise.
	* doc/design/qmtrack/introduction.xml: Likewise.
	* doc/design/qmtrack/requirements.xml: Likewise.
	* doc/design/qmtrack/xml-impl.xml: Likewise.
	
2000-12-04  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk (HTMLINDEX): New macro.
	(PRINTDIR): Likewise.
	(PRINTTEX): Likewise.
	(PRINTPDF): Likewise.
	(html-dir): Remove target.
	(html-output): Likewise.
	(html-graphics): Likewise.
	($(HTMLINDEX)): New target.
	($(HTMLMANIFEST)): Likewise.
	($(HTMLTARBALL)): Change dependencies.
	(docbook-print): Remove target.
	($(PRINTTEX)): New target.
	($(PRINTPDF)): Likewise.
	(%.html): Likewise.
	
	* doc/design/qmtrack/qmtrack.xml (dtml): New entity.
	(implementation.xml): Likewise.
	(idb-api.xml): Remove entity.
	Add authors.
	* doc/design/qmtrack/concepts.xml: Include triggers and
	user interface sections.
	* doc/design/qmtrack/idb-api.xml: Rename to...
	* doc/design/qmtrack/implementation.xml: ... this.  Add trigger
	API.  Include IDB implementation section.
	* doc/design/qmtrack/idb-impl.xml: Make it a section.
	* doc/design/qmtrack/triggers.xml: Remove API stuff.  Make it a
	section. 
	* doc/design/qmtrack/user-interface.xml: Make it a section.
	Reformat. 
	
2000-12-02  Benjamin Chelf  <chelf@codesourcery.com>

	* doc/design/qmtrack/user-interface.xml: Update e-mail section.

2000-12-01  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk: Update instructional comments.
	(HTMLDIR): New macro.
	(HTMLMANIFEST): Likewise.
	(HTMLTARBALL): Likewise.
	(docbook-html): Make it a collection target only.
	(html-dir): New target.
	(html-output): Likewise.
	(html-graphics): Likewise.
	($(HTMLTARBALL)): Likewise.
	(docbook-print): Process TeX output for PDF.

	* doc/design/qmtest/iface.xml: Add ids.  Clean up markup and
	identation. 
	* doc/design/qmtest/qmtest.xml (prompt): New entity.
	* doc/design/qmtest/req.xml: Remove bogus tag.

	* doc/design/qmtrack/Makefile (DOCBITMAPS): New macro.
	* doc/design/qmtrack/user-interface.xml: Add ids.

2000-12-01  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/concepts.xml: Add ids.  Rearrange sections.
	* doc/design/qmtrack/idb-api.xml: Remove queries section.
	* doc/design/qmtrack/idb-impl.xml: Fix link.
	* doc/design/qmtrack/introduction.xml: Don't include requirements.xml. 
	* doc/design/qmtrack/qmtrack.xml (prompt): New entity.
	(qmtrack-cmd): Likewise.
	Don't include xml-repr.xml.  Include requirements.xml.
	* doc/design/qmtrack/requirements.xml: Make it a chapter.
	* doc/design/qmtrack/user-interface.xml: Edit command-line
	section.  Tidy formatting.
	* doc/design/qmtrack/xml-repr.xml: Make it a section.
	
2000-11-30  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/qmtrack.xml: Don't include user-api.xml.
	* doc/design/qmtrack/user-api.xml: Remove.
	
2000-11-30  Alex Samuel  <samuel@codesourcery.com>

	* doc/qm-html.dsl (html-manifest): Set true.
	(html-manifest-filename): Set to "docbook-html.manifest".
	(%use-id-as-filename%): Set to true.
	
	* doc/design/qmtrack/qmtrack.xml (api): New entity.
	(sc): Likewise.
	(introduction.xml): Likewise.
	Include introduction.
	* doc/design/qmtrack/introduction.xml: New file.
	* doc/design/qmtrack/requirements.xml: Make it a section.  Edit.
	* doc/design/qmtrack/concepts.xml: Revise introductory text.
	Add ids.  Rename time field.  
	
2000-11-30  Benjamin Chelf  <chelf@codesourcery.com>

	* doc/desgin/qmtrack/create1.jpg: New file.
	* doc/desgin/qmtrack/create2.jpg: Likewise.
	* doc/desgin/qmtrack/edit1.jpg: Likewise.
	* doc/desgin/qmtrack/edit2.jpg: Likewise.
	* doc/desgin/qmtrack/edit3.jpg: Likewise.
	* doc/desgin/qmtrack/query1.jpg: Likewise.
	* doc/desgin/qmtrack/query2.jpg: Likewise.
	* doc/desgin/qmtrack/query3.jpg: Likewise.	
	
	* doc/design/qmtrack/user-interface.xml: Update to contain new
	ideas for interfaces.

2000-11-30  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/concepts.xml: Rename mandatory fields.
	Rewrite queries section.
	* doc/design/qmtrack/idb-api.xml: Edit.
	* doc/design/qmtrack/idb-impl.xml: New file.
	* doc/design/qmtrack/qmtrack.xml: Include idb-impl.xml.
	* doc/design/qmtrack/xml-repr.xml: Add ids and links.
	
2000-11-30  Alex Samuel  <samuel@codesourcery.com>

	* doc/qm-html.dsl (%section-autolabel%): Set to true.
	(chunk-skip-first-element-list): Set to empty list.

2000-11-29  Mark Mitchell  <mark@codesourcery.com>

	* doc/design/qmtest/qmtest.xml: Revise heavily, tightening
	prose, clarifying concepts, etc.
	* doc/design/qmtest/core.xml: Likewise.
	* doc/design/qmtest/impl.xml: Likewise.
	* doc/design/qmtest/req.xml: Likewise.

2000-11-29  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/qmtrack.xml: Make acronyms upper-case.
	(dtd): New entity.
	(xml): Likewise.
	Include xml-repr.xml.
	* doc/design/qmtrack/triggers.xml: Finish.
	* doc/design/qmtrack/xml-repr.xml: New file.
	* doc/design/qmtrack/user-interface.xml: Add id's.  Fix some
	indentation. 
	
2000-11-28  Mark Mitchell  <mark@codesourcery.com>

	* doc/design/qmtest/core.xml: Fix DocBook syntax errors.
	* doc/design/qmtest/impl.xml: Likewise.
	* doc/design/qmtest/qmtest.xml: Likewise.
	* doc/design/qmtest/refs.xml: Likewise.
	* doc/design/qmtest/req.xml: Likewise.
	* doc/design/qmtest/design.html: Remove.

2000-11-28  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/triggers.xml: New file.

2000-11-27  Benjamin Chelf  <chelf@codesourcery.com>

	* doc/design/qmtrack/qmtrack.xml: Add user-interface.xml.
	* doc/design/qmtrack/user-api.xml: Fix typos.
	* doc/design/qmtrack/user-interface.xml: New file.

2000-11-26  Alex Samuel  <samuel@codesourcery.com>
	
	* doc/design/qmtrack/idb-api.xml: Add missing </section> tag.
	
2000-11-26  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtrack/concepts.xml: Continue.
	* doc/design/qmtrack/idb-api.xml: Likewise.

2000-11-25  Benjamin Chelf  <chelf@codesourcery.com>

	* doc/design/qmtrack/user-api.xml: Make style changes. Update
	based on conversations with Alex.

2000-11-20  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtest/req.xml: New file.

2000-11-20  Alex Samuel  <samuel@codesourcery.com>

	* README.sources: Add discussion of doc strings.

2000-11-20  Benjamin Chelf  <chelf@codesourcery.com>

	* doc/design/qmtrack/qmtrack.xml: Added user-api.xml.
	* doc/design/qmtrack/user-api.xml: New file.

2000-11-16  Alex Samuel  <samuel@codesourcery.com>

	* doc/concept: New directory.
	* doc/concept/sapcat: Likewise.
	* doc/design/qmconfig/*: Surgically move all repository files to...
	* doc/concept/sapcat/*: ... here.

2000-11-10  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk (docbook-html): Fix files to tidy.

2000-11-10  Alex Samuel  <samuel@codesourcery.com>

	Conversion to DocBook.
	
	* standard.mk (TIDYFLAGS): Use one-space indent.
	(JADE): New variable.
	(JADEEXTRA): Likewise.
	(SGMLDIRS): Likewise.
	(HTMLSS): Likewise.
	(PRINTSS): Likewise.
	(NULLSTIRNG): Likewise.
	(SPACE): Likewise.
	(doc): New rule.
	(doc-html): New rule, conditionally.
	(doc-print): Likewise.
	(docbook-html): New rule.
	(docbook-print): Likewise.
	* doc/GNUmakefile: Rename to...
	* doc/Makefile: ... this.
	
	* doc/qm-print.dsl: New file.
	* doc/qm-html.dsl: Likewise.
	
	* doc/design/qmtest/GNUmakefile: Rename to...
	* doc/design/qmtest/Makefile: ... this.
	* doc/design/qmtest/*.xhtml: Remove.
	* doc/design/qmtest/*.xml: New files.

	* doc/design/qmtrack/GNUmakefile: Rename to...
	* doc/design/qmtrack/Makefile: ... this.
	* doc/design/qmtrack/*.xhtml: Remove.
	* doc/design/qmtrack/*.xml: New files.

	* templates/docbook: New file.
	* templates/docbook-chapter: Likewise.
	* templates/xml: Add XML PI.
	
2000-11-06  Alex Samuel  <samuel@codesourcery.com>

	* doc/GNUmakefile (SUBDIRS): Add design/qmtest.

2000-11-06  Alex Samuel  <samuel@codesourcery.com>

	* doc/process-xhtml.py: Handle multiple term classes.  Use
	pickling for .terms file.
	(terms_classes): New list.
	(terms_def_classes): Likewise.
	* templates/html: Add emacs gunk to set fill-column.
	
2000-11-03  Alex Samuel  <samuel@codesourcery.com>

	* doc/process-xhtml.py (clean_up_term): New function.
	Use it.  Try to handle pluralized terms.
	* doc/qm.css (div.XML): New class.
	(span.Function): Likewise.
	
2000-11-01  Alex Samuel  <samuel@codesourcery.com>

	* doc/qm.css (a.Dfn): Remove.
	(a.TermDef): Fix background-color.
	(span.Identifier): Recreate.
	(span.Class): Likewise.
	(table): New style.
	(tr.Heading): New class.
	(span.Fixme): Likewise.

	* templates/html: Add Emacs local variables.

2000-10-31  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk (%.html): Fix.
	* doc/process-xhtml.py: Fix href attribute.
	* doc/qm.css (a.TermDef): Fix font-style.
	(div.api): Rename to...
	(div.API): ... this.
	(span.Identifier): New class.
	(span.Class): Likewise.
	
	* doc/design/qmtest/terms.xhtml: New file.
	
2000-10-27  Alex Samuel  <samuel@codesourcery.com>

	* templates/html: Use Open Publication License.
	* doc/design/qmtest/design.html: Likewise.
	* doc/design/qmtrack/index.xhtml: Likewise.
	* doc/design/qmtrack/architecture.xhtml: Likewise.
	* doc/design/qmtrack/requirements.xhtml: Likewise.
	
2000-10-26  Alex Samuel  <samuel@codesourcery.com>

	* doc/process-xhtml.py: Convert to coding standards.
	* doc/qm.css (div.api): New style.
	* templates/html: Remove emacs variable stuff.
	* templates/py: Add emacs variable stuff.
	
2000-10-25  Alex Samuel  <samuel@codesourcery.com>

	* stanard.mk: Add comments.
	(.PHONY): Fix typo.
	(TOPDIR): New variable.
	(XHTMLPROCESS): Likewise.
	($(SUBDIRS)): Pass TOPDIR to child make processes.
	(%.html): Use XHTML processor script.
	* doc/process-xhtml.py: New script.
	* doc/design/qmtrack/GNUmakefile: Use TOPDIR.
	
	* doc/qm.css: Improve comments.
	
2000-10-25  Alex Samuel  <samuel@codesourcery.com>

	* standard.mk: New file.
	* doc/GNUmakefile: Likewise.
	* doc/qm.css: Likewise.
	* doc/design/qmtrack/GNUmakefile: Likewise.
	* templates/html: Update for XHTML.
	
2000-10-24  Alex Samuel  <samuel@codesourcery.com>

	* templates/html (DOCTYPE): Add.

2000-10-24  Alex Samuel  <samuel@codesourcery.com>

	* templates/py: New file.

2000-10-24  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmconfig/...: Import.

2000-10-22  Alex Samuel  <samuel@codesourcery.com>

	* doc/design/qmtest/design.html: Import.
	
2000-10-22  Alex Samuel  <samuel@codesourcery.com>

	* doc/design: New directory.
	* doc/design/qmconfig: Likewise.
	* doc/design/qmbuild: Likewise.
	* doc/design/qmtest: Likewise.
	* doc/design/qmtrack: Likewise.
	
2000-10-22  Alex Samuel  <samuel@codesourcery.com>

	* ChangeLog: New file.
	* README.sources: Likewise.
	* COPYING: Likewise.
	
	* templates: New directory.
	* doc: Likewise.
