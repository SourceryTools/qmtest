
		     Software Carpentry QM Tools

     Copyright (C) 2001 by CodeSourcery LLC.  All rights reserved.

------------------------------------------------------------------------

1.  REQUIREMENTS

    Besides Python, various tools are necessary for building QM
    software and documentation.  See

      http://www.software-carpentry.com/dev

    for more information on obtaining the tools.


------------------------------------------------------------------------

2.  BUILDING QM

    From the top of the source tree, first configure the sources:

      ./configure

    You'll have to do a one-time setup as well:

      make setup

    Then build things:

      make


------------------------------------------------------------------------

3. GETTING STARTED WITH QMTRACK

   The qmtrack executable is qm/qm/track/qmtrack.  This single
   executable provides all QMTrack functionality.  There is no need to
   set up your PYTHONPATH; this is set automatically by the script.

   Before using QMTrack, you'll have to create an issue database (IDB).
   The IDB containes QMTrack's configuration plus the state and revision
   history of issues tracked by the system.

   To create a new IDB, use the initialize command.  Specify the path to
   the new database.  Specify the --test-values option so that QMTrack
   adds to the IDB a sample test issue class (the schema that defines
   what information is stored for each issue) and a few sample issues to
   start you off.

     qmtrack initialize --test-values /path/to/idb

   Subsequently, you have to tell qmtrack where the IDB is.  Either
   use the --idb option, or

     export QMTRACK_IDB_PATH=/path/to/idb

   You should then be able to poke around at the IDB.  For instance,
   to list the issue ids of all issues,

     qmtrack query --format iid 1

   The query expression "1" always evaluates to true, so all issues
   match.  Without the --format iid option, QMTrack displays more
   information about each issue.  Use the --help option to learn more
   about using the qmtrack command.


   To start the web server, use the qmtrack server command.  For
   instance, to start the server on port 9000 and write log messages
   to stdout,

     qmtrack server --port 9000 --log-file -

   Point your web browser at

     http://my.host:9000/track/summary

   and click around.

   Note that at present, QMTrack binds binds the port number you specify
   on all network interfaces.  As a result, anyone with network access
   to your computer will be able to access the QMTrack server.

   When you're done, you can erase the IDB with

     qmtrack destroy /path/to/idb


------------------------------------------------------------------------

4. THIRD-PARTY SOFTWARE

   The QM Tools incorporate code written by third parties. 

     - The zope-dtml module contains code for generating HTML from DTML
       (Document Template Markup Language) from the Zope package, by
       Digital Creations.

     - The gadfly module containsthe Gadfly SQL Relational Database
       (http://www.chordate.com/kwParsing/gadfly.html), written by
       Chordate Systems.

     - The sgmlop module contains an optimized SGML/XML parser by
       Fredrik Lundh and Secret Labs AB.

     - The xmlrpc module contains a Python implementation of XML/RPC by
       Fredrik Lundh and Secret Labs AB.
       
   Please consult the corresponding READMEs, license files, etc. for
   applicable copyright notices.


------------------------------------------------------------------------
Local Variables:
mode: text
fill-column: 72
End:
